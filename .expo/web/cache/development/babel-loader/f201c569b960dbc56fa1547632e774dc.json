{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nvar checkSerializableWithoutCircularReference = function checkSerializableWithoutCircularReference(o, seen, location) {\n  if (o === undefined || o === null || typeof o === 'boolean' || typeof o === 'number' || typeof o === 'string') {\n    return {\n      serializable: true\n    };\n  }\n\n  if (Object.prototype.toString.call(o) !== '[object Object]' && !Array.isArray(o)) {\n    return {\n      serializable: false,\n      location: location,\n      reason: typeof o === 'function' ? 'Function' : String(o)\n    };\n  }\n\n  if (seen.has(o)) {\n    return {\n      serializable: false,\n      reason: 'Circular reference',\n      location: location\n    };\n  }\n\n  seen.add(o);\n\n  if (Array.isArray(o)) {\n    for (var i = 0; i < o.length; i++) {\n      var childResult = checkSerializableWithoutCircularReference(o[i], new Set(seen), [].concat(_toConsumableArray(location), [i]));\n\n      if (!childResult.serializable) {\n        return childResult;\n      }\n    }\n  } else {\n    for (var key in o) {\n      var _childResult = checkSerializableWithoutCircularReference(o[key], new Set(seen), [].concat(_toConsumableArray(location), [key]));\n\n      if (!_childResult.serializable) {\n        return _childResult;\n      }\n    }\n  }\n\n  return {\n    serializable: true\n  };\n};\n\nexport default function checkSerializable(o) {\n  return checkSerializableWithoutCircularReference(o, new Set(), []);\n}","map":{"version":3,"sources":["checkSerializable.tsx"],"names":["checkSerializableWithoutCircularReference","o","serializable","Object","Array","location","reason","String","seen","i","childResult"],"mappings":";;AAAA,IAAMA,yCAAyC,GAAG,SAA5CA,yCAA4C,CAAA,CAAA,EAAA,IAAA,EAAA,QAAA,EAUzC;EACP,IACEC,CAAC,KAADA,SAAAA,IACAA,CAAC,KADDA,IAAAA,IAEA,OAAA,CAAA,KAFAA,SAAAA,IAGA,OAAA,CAAA,KAHAA,QAAAA,IAIA,OAAA,CAAA,KALF,QAAA,EAME;IACA,OAAO;MAAEC,YAAY,EAAE;IAAhB,CAAP;EACD;;EAED,IACEC,MAAM,CAANA,SAAAA,CAAAA,QAAAA,CAAAA,IAAAA,CAAAA,CAAAA,MAAAA,iBAAAA,IACA,CAACC,KAAK,CAALA,OAAAA,CAFH,CAEGA,CAFH,EAGE;IACA,OAAO;MACLF,YAAY,EADP,KAAA;MAELG,QAFK,EAELA,QAFK;MAGLC,MAAM,EAAE,OAAA,CAAA,KAAA,UAAA,GAAA,UAAA,GAAuCC,MAAM,CAAA,CAAA;IAHhD,CAAP;EAKD;;EAED,IAAIC,IAAI,CAAJA,GAAAA,CAAJ,CAAIA,CAAJ,EAAiB;IACf,OAAO;MACLN,YAAY,EADP,KAAA;MAELI,MAAM,EAFD,oBAAA;MAGLD,QAAAA,EAAAA;IAHK,CAAP;EAKD;;EAEDG,IAAI,CAAJA,GAAAA,CAAAA,CAAAA;;EAEA,IAAIJ,KAAK,CAALA,OAAAA,CAAJ,CAAIA,CAAJ,EAAsB;IACpB,KAAK,IAAIK,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGR,CAAC,CAArB,MAAA,EAA8BQ,CAA9B,EAAA,EAAmC;MACjC,IAAMC,WAAW,GAAGV,yCAAyC,CAC3DC,CAAC,CAD0D,CAC1D,CAD0D,EAE3D,IAAA,GAAA,CAF2D,IAE3D,CAF2D,+BAG3D,QAH2D,IAA7D,CAA6D,GAA7D;;MAMA,IAAI,CAACS,WAAW,CAAhB,YAAA,EAA+B;QAC7B,OAAA,WAAA;MACD;IACF;EAXH,CAAA,MAYO;IACL,KAAK,IAAL,GAAA,IAAA,CAAA,EAAqB;MACnB,IAAMA,YAAW,GAAGV,yCAAyC,CAC3DC,CAAC,CAD0D,GAC1D,CAD0D,EAE3D,IAAA,GAAA,CAF2D,IAE3D,CAF2D,+BAG3D,QAH2D,IAA7D,GAA6D,GAA7D;;MAMA,IAAI,CAACS,YAAW,CAAhB,YAAA,EAA+B;QAC7B,OAAA,YAAA;MACD;IACF;EACF;;EAED,OAAO;IAAER,YAAY,EAAE;EAAhB,CAAP;AApEF,CAAA;;AAuEA,eAAe,SAAA,iBAAA,CAAA,CAAA,EAAsD;EACnE,OAAOF,yCAAyC,CAAA,CAAA,EAAI,IAAJ,GAAI,EAAJ,EAAhD,EAAgD,CAAhD;AACD","sourcesContent":["const checkSerializableWithoutCircularReference = (\n  o: { [key: string]: any },\n  seen: Set<any>,\n  location: (string | number)[]\n):\n  | { serializable: true }\n  | {\n      serializable: false;\n      location: (string | number)[];\n      reason: string;\n    } => {\n  if (\n    o === undefined ||\n    o === null ||\n    typeof o === 'boolean' ||\n    typeof o === 'number' ||\n    typeof o === 'string'\n  ) {\n    return { serializable: true };\n  }\n\n  if (\n    Object.prototype.toString.call(o) !== '[object Object]' &&\n    !Array.isArray(o)\n  ) {\n    return {\n      serializable: false,\n      location,\n      reason: typeof o === 'function' ? 'Function' : String(o),\n    };\n  }\n\n  if (seen.has(o)) {\n    return {\n      serializable: false,\n      reason: 'Circular reference',\n      location,\n    };\n  }\n\n  seen.add(o);\n\n  if (Array.isArray(o)) {\n    for (let i = 0; i < o.length; i++) {\n      const childResult = checkSerializableWithoutCircularReference(\n        o[i],\n        new Set<any>(seen),\n        [...location, i]\n      );\n\n      if (!childResult.serializable) {\n        return childResult;\n      }\n    }\n  } else {\n    for (const key in o) {\n      const childResult = checkSerializableWithoutCircularReference(\n        o[key],\n        new Set<any>(seen),\n        [...location, key]\n      );\n\n      if (!childResult.serializable) {\n        return childResult;\n      }\n    }\n  }\n\n  return { serializable: true };\n};\n\nexport default function checkSerializable(o: { [key: string]: any }) {\n  return checkSerializableWithoutCircularReference(o, new Set<any>(), []);\n}\n"]},"metadata":{},"sourceType":"module"}