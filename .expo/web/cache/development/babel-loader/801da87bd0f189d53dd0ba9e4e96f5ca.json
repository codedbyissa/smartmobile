{"ast":null,"code":"export default function isRecordEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n\n  return aKeys.every(function (key) {\n    return a[key] === b[key];\n  });\n}","map":{"version":3,"sources":["isRecordEqual.tsx"],"names":["a","aKeys","Object","bKeys","key","b"],"mappings":"AAGA,eAAe,SAAA,aAAA,CAAA,CAAA,EAAA,CAAA,EAGb;EACA,IAAIA,CAAC,KAAL,CAAA,EAAa;IACX,OAAA,IAAA;EACD;;EAED,IAAMC,KAAK,GAAGC,MAAM,CAANA,IAAAA,CAAd,CAAcA,CAAd;EACA,IAAMC,KAAK,GAAGD,MAAM,CAANA,IAAAA,CAAd,CAAcA,CAAd;;EAEA,IAAID,KAAK,CAALA,MAAAA,KAAiBE,KAAK,CAA1B,MAAA,EAAmC;IACjC,OAAA,KAAA;EACD;;EAED,OAAOF,KAAK,CAALA,KAAAA,CAAaG,UAAAA,GAAD;IAAA,OAASJ,CAAC,CAADA,GAAC,CAADA,KAAWK,CAAC,CAAxC,GAAwC,CAArB;EAAA,CAAZJ,CAAP;AACD","sourcesContent":["/**\n * Compare two records with primitive values as the content.\n */\nexport default function isRecordEqual(\n  a: Record<string, any>,\n  b: Record<string, any>\n) {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n\n  return aKeys.every((key) => a[key] === b[key]);\n}\n"]},"metadata":{},"sourceType":"module"}