{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"index\", \"total\", \"style\", \"theme\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { withTheme } from \"../../core/theming\";\nimport { grey200 } from \"../../styles/colors\";\n\nvar CardCover = function CardCover(_ref) {\n  var index = _ref.index,\n      total = _ref.total,\n      style = _ref.style,\n      theme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var roundness = theme.roundness;\n  var coverStyle;\n\n  if (index === 0) {\n    if (total === 1) {\n      coverStyle = {\n        borderRadius: roundness\n      };\n    } else {\n      coverStyle = {\n        borderTopLeftRadius: roundness,\n        borderTopRightRadius: roundness\n      };\n    }\n  } else if (typeof total === 'number' && index === total - 1) {\n    coverStyle = {\n      borderBottomLeftRadius: roundness\n    };\n  }\n\n  return React.createElement(View, {\n    style: [styles.container, coverStyle, style]\n  }, React.createElement(Image, _extends({}, rest, {\n    style: [styles.image, coverStyle]\n  })));\n};\n\nCardCover.displayName = 'Card.Cover';\nvar styles = StyleSheet.create({\n  container: {\n    height: 195,\n    backgroundColor: grey200,\n    overflow: 'hidden'\n  },\n  image: {\n    flex: 1,\n    height: undefined,\n    width: undefined,\n    padding: 16,\n    justifyContent: 'flex-end'\n  }\n});\nexport default withTheme(CardCover);\nexport { CardCover };","map":{"version":3,"sources":["CardCover.tsx"],"names":["CardCover","rest","roundness","index","total","coverStyle","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","styles","container","height","backgroundColor","overflow","image","flex","width","padding","justifyContent","withTheme"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;;AAEA,SAAA,SAAA;AACA,SAAA,OAAA;;AA2CA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAAA,IAAA,EAAoD;EAAnD,IAAA,KAAA,GAAmD,IAAnD,CAAA,KAAA;EAAA,IAAA,KAAA,GAAmD,IAAnD,CAAA,KAAA;EAAA,IAAA,KAAA,GAAmD,IAAnD,CAAA,KAAA;EAAA,IAAA,KAAA,GAAmD,IAAnD,CAAA,KAAA;EAAA,IAAiCC,IAAjC,4BAAmD,IAAnD;;EACjB,IAAQC,SAAR,GAAA,KAAA,CAAQA,SAAR;EAEA,IAAA,UAAA;;EAEA,IAAIC,KAAK,KAAT,CAAA,EAAiB;IACf,IAAIC,KAAK,KAAT,CAAA,EAAiB;MACfC,UAAU,GAAG;QACXC,YAAY,EAAEJ;MADH,CAAbG;IADF,CAAA,MAIO;MACLA,UAAU,GAAG;QACXE,mBAAmB,EADR,SAAA;QAEXC,oBAAoB,EAAEN;MAFX,CAAbG;IAID;EAVH,CAAA,MAWO,IAAI,OAAA,KAAA,KAAA,QAAA,IAA6BF,KAAK,KAAKC,KAAK,GAAhD,CAAA,EAAsD;IAC3DC,UAAU,GAAG;MACXI,sBAAsB,EAAEP;IADb,CAAbG;EAGD;;EAED,OACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;IAAM,KAAK,EAAE,CAACK,MAAM,CAAP,SAAA,EAAA,UAAA,EAAA,KAAA;EAAb,CAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;IAAiB,KAAK,EAAE,CAACA,MAAM,CAAP,KAAA,EAAA,UAAA;EAAxB,CAAA,CAAA,CADF,CADF;AAtBF,CAAA;;AA6BAV,SAAS,CAATA,WAAAA,GAAAA,YAAAA;AACA,IAAMU,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;EAC/BC,SAAS,EAAE;IACTC,MAAM,EADG,GAAA;IAETC,eAAe,EAFN,OAAA;IAGTC,QAAQ,EAAE;EAHD,CADoB;EAM/BC,KAAK,EAAE;IACLC,IAAI,EADC,CAAA;IAELJ,MAAM,EAFD,SAAA;IAGLK,KAAK,EAHA,SAAA;IAILC,OAAO,EAJF,EAAA;IAKLC,cAAc,EAAE;EALX;AANwB,CAAlB,CAAf;AAeA,eAAeC,SAAS,CAAxB,SAAwB,CAAxB;AAGA,SAAA,SAAA","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Image, StyleProp } from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { grey200 } from '../../styles/colors';\n\ntype Props = React.ComponentPropsWithRef<typeof Image> & {\n  /**\n   * @internal\n   */\n  index?: number;\n  /**\n   * @internal\n   */\n  total?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show a cover image inside a Card.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/card-cover.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Image props https://reactnative.dev/docs/image#props\n */\nconst CardCover = ({ index, total, style, theme, ...rest }: Props) => {\n  const { roundness } = theme;\n\n  let coverStyle;\n\n  if (index === 0) {\n    if (total === 1) {\n      coverStyle = {\n        borderRadius: roundness,\n      };\n    } else {\n      coverStyle = {\n        borderTopLeftRadius: roundness,\n        borderTopRightRadius: roundness,\n      };\n    }\n  } else if (typeof total === 'number' && index === total - 1) {\n    coverStyle = {\n      borderBottomLeftRadius: roundness,\n    };\n  }\n\n  return (\n    <View style={[styles.container, coverStyle, style]}>\n      <Image {...rest} style={[styles.image, coverStyle]} />\n    </View>\n  );\n};\n\nCardCover.displayName = 'Card.Cover';\nconst styles = StyleSheet.create({\n  container: {\n    height: 195,\n    backgroundColor: grey200,\n    overflow: 'hidden',\n  },\n  image: {\n    flex: 1,\n    height: undefined,\n    width: undefined,\n    padding: 16,\n    justifyContent: 'flex-end',\n  },\n});\n\nexport default withTheme(CardCover);\n\n// @component-docs ignore-next-line\nexport { CardCover };\n"]},"metadata":{},"sourceType":"module"}