{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport MaskedView from \"../MaskedView\";\nimport PlatformPressable from \"../PlatformPressable\";\nexport default function HeaderBackButton(_ref) {\n  var disabled = _ref.disabled,\n      allowFontScaling = _ref.allowFontScaling,\n      backImage = _ref.backImage,\n      label = _ref.label,\n      labelStyle = _ref.labelStyle,\n      labelVisible = _ref.labelVisible,\n      onLabelLayout = _ref.onLabelLayout,\n      onPress = _ref.onPress,\n      pressColor = _ref.pressColor,\n      pressOpacity = _ref.pressOpacity,\n      screenLayout = _ref.screenLayout,\n      customTintColor = _ref.tintColor,\n      titleLayout = _ref.titleLayout,\n      _ref$truncatedLabel = _ref.truncatedLabel,\n      truncatedLabel = _ref$truncatedLabel === void 0 ? 'Back' : _ref$truncatedLabel,\n      _ref$accessibilityLab = _ref.accessibilityLabel,\n      accessibilityLabel = _ref$accessibilityLab === void 0 ? label && label !== 'Back' ? label + \", back\" : 'Go back' : _ref$accessibilityLab,\n      testID = _ref.testID,\n      style = _ref.style;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _React$useState = React.useState(undefined),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      initialLabelWidth = _React$useState2[0],\n      setInitialLabelWidth = _React$useState2[1];\n\n  var tintColor = customTintColor !== undefined ? customTintColor : Platform.select({\n    ios: colors.primary,\n    default: colors.text\n  });\n\n  var handleLabelLayout = function handleLabelLayout(e) {\n    onLabelLayout === null || onLabelLayout === void 0 ? void 0 : onLabelLayout(e);\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  var shouldTruncateLabel = function shouldTruncateLabel() {\n    return !label || initialLabelWidth && titleLayout && screenLayout && (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26;\n  };\n\n  var renderBackImage = function renderBackImage() {\n    if (backImage) {\n      return backImage({\n        tintColor: tintColor\n      });\n    } else {\n      return React.createElement(Image, {\n        style: [styles.icon, Boolean(labelVisible) && styles.iconWithLabel, Boolean(tintColor) && {\n          tintColor: tintColor\n        }],\n        source: require(\"../assets/back-icon.png\"),\n        fadeDuration: 0\n      });\n    }\n  };\n\n  var renderLabel = function renderLabel() {\n    var leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    var labelElement = React.createElement(View, {\n      style: screenLayout ? [styles.labelWrapper, {\n        minWidth: screenLayout.width / 2 - 27\n      }] : null\n    }, React.createElement(Animated.Text, {\n      accessible: false,\n      onLayout: leftLabelText === label ? handleLabelLayout : undefined,\n      style: [styles.label, tintColor ? {\n        color: tintColor\n      } : null, labelStyle],\n      numberOfLines: 1,\n      allowFontScaling: !!allowFontScaling\n    }, leftLabelText));\n\n    if (backImage || Platform.OS !== 'ios') {\n      return labelElement;\n    }\n\n    return React.createElement(MaskedView, {\n      maskElement: React.createElement(View, {\n        style: styles.iconMaskContainer\n      }, React.createElement(Image, {\n        source: require(\"../assets/back-icon-mask.png\"),\n        style: styles.iconMask\n      }), React.createElement(View, {\n        style: styles.iconMaskFillerRect\n      }))\n    }, labelElement);\n  };\n\n  var handlePress = function handlePress() {\n    return onPress && requestAnimationFrame(onPress);\n  };\n\n  return React.createElement(PlatformPressable, {\n    disabled: disabled,\n    accessible: true,\n    accessibilityRole: \"button\",\n    accessibilityLabel: accessibilityLabel,\n    testID: testID,\n    onPress: disabled ? undefined : handlePress,\n    pressColor: pressColor,\n    pressOpacity: pressOpacity,\n    android_ripple: {\n      borderless: true\n    },\n    style: [styles.container, disabled && styles.disabled, style],\n    hitSlop: Platform.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    })\n  }, React.createElement(React.Fragment, null, renderBackImage(), renderLabel()));\n}\nvar styles = StyleSheet.create({\n  container: _objectSpread({\n    alignItems: 'center',\n    flexDirection: 'row',\n    minWidth: StyleSheet.hairlineWidth\n  }, Platform.select({\n    ios: null,\n    default: {\n      marginVertical: 3,\n      marginHorizontal: 11\n    }\n  })),\n  disabled: {\n    opacity: 0.5\n  },\n  label: {\n    fontSize: 17,\n    letterSpacing: 0.35\n  },\n  labelWrapper: {\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: I18nManager.isRTL ? -1 : 1\n      }]\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: I18nManager.isRTL ? -1 : 1\n      }]\n    }\n  }),\n  iconWithLabel: Platform.OS === 'ios' ? {\n    marginRight: 6\n  } : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  }\n});","map":{"version":3,"sources":["HeaderBackButton.tsx"],"names":["tintColor","truncatedLabel","accessibilityLabel","label","style","colors","useTheme","React","customTintColor","ios","default","text","handleLabelLayout","e","onLabelLayout","setInitialLabelWidth","shouldTruncateLabel","initialLabelWidth","screenLayout","titleLayout","renderBackImage","backImage","styles","Boolean","require","renderLabel","leftLabelText","labelElement","minWidth","color","allowFontScaling","Platform","iconMaskContainer","iconMask","iconMaskFillerRect","handlePress","onPress","requestAnimationFrame","disabled","borderless","top","right","bottom","left","container","alignItems","flexDirection","StyleSheet","marginVertical","marginHorizontal","opacity","fontSize","letterSpacing","labelWrapper","icon","height","width","marginLeft","marginRight","resizeMode","transform","scaleX","I18nManager","margin","iconWithLabel","flex","justifyContent","backgroundColor","alignSelf"],"mappings":"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","sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  Image,\n  LayoutChangeEvent,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport MaskedView from '../MaskedView';\nimport PlatformPressable from '../PlatformPressable';\nimport type { HeaderBackButtonProps } from '../types';\n\nexport default function HeaderBackButton({\n  disabled,\n  allowFontScaling,\n  backImage,\n  label,\n  labelStyle,\n  labelVisible,\n  onLabelLayout,\n  onPress,\n  pressColor,\n  pressOpacity,\n  screenLayout,\n  tintColor: customTintColor,\n  titleLayout,\n  truncatedLabel = 'Back',\n  accessibilityLabel = label && label !== 'Back' ? `${label}, back` : 'Go back',\n  testID,\n  style,\n}: HeaderBackButtonProps) {\n  const { colors } = useTheme();\n\n  const [initialLabelWidth, setInitialLabelWidth] = React.useState<\n    undefined | number\n  >(undefined);\n\n  const tintColor =\n    customTintColor !== undefined\n      ? customTintColor\n      : Platform.select({\n          ios: colors.primary,\n          default: colors.text,\n        });\n\n  const handleLabelLayout = (e: LayoutChangeEvent) => {\n    onLabelLayout?.(e);\n\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  const shouldTruncateLabel = () => {\n    return (\n      !label ||\n      (initialLabelWidth &&\n        titleLayout &&\n        screenLayout &&\n        (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26)\n    );\n  };\n\n  const renderBackImage = () => {\n    if (backImage) {\n      return backImage({ tintColor });\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            Boolean(labelVisible) && styles.iconWithLabel,\n            Boolean(tintColor) && { tintColor },\n          ]}\n          source={require('../assets/back-icon.png')}\n          fadeDuration={0}\n        />\n      );\n    }\n  };\n\n  const renderLabel = () => {\n    const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    const labelElement = (\n      <View\n        style={\n          screenLayout\n            ? // We make the button extend till the middle of the screen\n              // Otherwise it appears to cut off when translating\n              [styles.labelWrapper, { minWidth: screenLayout.width / 2 - 27 }]\n            : null\n        }\n      >\n        <Animated.Text\n          accessible={false}\n          onLayout={\n            // This measurement is used to determine if we should truncate the label when it doesn't fit\n            // Only measure it when label is not truncated because we want the measurement of full label\n            leftLabelText === label ? handleLabelLayout : undefined\n          }\n          style={[\n            styles.label,\n            tintColor ? { color: tintColor } : null,\n            labelStyle,\n          ]}\n          numberOfLines={1}\n          allowFontScaling={!!allowFontScaling}\n        >\n          {leftLabelText}\n        </Animated.Text>\n      </View>\n    );\n\n    if (backImage || Platform.OS !== 'ios') {\n      // When a custom backimage is specified, we can't mask the label\n      // Otherwise there might be weird effect due to our mask not being the same as the image\n      return labelElement;\n    }\n\n    return (\n      <MaskedView\n        maskElement={\n          <View style={styles.iconMaskContainer}>\n            <Image\n              source={require('../assets/back-icon-mask.png')}\n              style={styles.iconMask}\n            />\n            <View style={styles.iconMaskFillerRect} />\n          </View>\n        }\n      >\n        {labelElement}\n      </MaskedView>\n    );\n  };\n\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\n\n  return (\n    <PlatformPressable\n      disabled={disabled}\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityLabel={accessibilityLabel}\n      testID={testID}\n      onPress={disabled ? undefined : handlePress}\n      pressColor={pressColor}\n      pressOpacity={pressOpacity}\n      android_ripple={{ borderless: true }}\n      style={[styles.container, disabled && styles.disabled, style]}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n    >\n      <React.Fragment>\n        {renderBackImage()}\n        {renderLabel()}\n      </React.Fragment>\n    </PlatformPressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    minWidth: StyleSheet.hairlineWidth, // Avoid collapsing when title is long\n    ...Platform.select({\n      ios: null,\n      default: {\n        marginVertical: 3,\n        marginHorizontal: 11,\n      },\n    }),\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  label: {\n    fontSize: 17,\n    // Title and back label are a bit different width due to title being bold\n    // Adjusting the letterSpacing makes them coincide better\n    letterSpacing: 0.35,\n  },\n  labelWrapper: {\n    // These styles will make sure that the label doesn't fill the available space\n    // Otherwise it messes with the measurement of the label\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n  }),\n  iconWithLabel:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n});\n"]},"metadata":{},"sourceType":"module"}