{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { BaseGesture } from \"./gesture\";\nexport var LongPressGesture = function (_BaseGesture) {\n  _inherits(LongPressGesture, _BaseGesture);\n\n  var _super = _createSuper(LongPressGesture);\n\n  function LongPressGesture() {\n    var _this;\n\n    _classCallCheck(this, LongPressGesture);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"config\", {});\n\n    _this.handlerName = 'LongPressGestureHandler';\n    return _this;\n  }\n\n  _createClass(LongPressGesture, [{\n    key: \"minDuration\",\n    value: function minDuration(duration) {\n      this.config.minDurationMs = duration;\n      return this;\n    }\n  }, {\n    key: \"maxDistance\",\n    value: function maxDistance(distance) {\n      this.config.maxDist = distance;\n      return this;\n    }\n  }]);\n\n  return LongPressGesture;\n}(BaseGesture);","map":{"version":3,"sources":["longPressGesture.ts"],"names":["constructor","minDuration","maxDistance"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,WAAA;AAMA,WAAO,gBAAP;EAAA;;EAAA;;EAGEA,4BAAc;IAAA;;IAAA;;IACZ;;IADY,eAAA,gCAAA,QAAA,EAF8C,EAE9C,CAAA;;IAGZ,MAAA,WAAA,GAAA,yBAAA;IAHY;EAIb;;EAPH;IAAA;IAAA,OASEC,qBAAW,QAAXA,EAA8B;MAC5B,KAAA,MAAA,CAAA,aAAA,GAAA,QAAA;MACA,OAAA,IAAA;IACD;EAZH;IAAA;IAAA,OAcEC,qBAAW,QAAXA,EAA8B;MAC5B,KAAA,MAAA,CAAA,OAAA,GAAA,QAAA;MACA,OAAA,IAAA;IACD;EAjBH;;EAAA;AAAA,EAAO,WAAP","sourcesContent":["import { BaseGesture, BaseGestureConfig } from './gesture';\nimport {\n  LongPressGestureConfig,\n  LongPressGestureHandlerEventPayload,\n} from '../LongPressGestureHandler';\n\nexport class LongPressGesture extends BaseGesture<LongPressGestureHandlerEventPayload> {\n  public config: BaseGestureConfig & LongPressGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'LongPressGestureHandler';\n  }\n\n  minDuration(duration: number) {\n    this.config.minDurationMs = duration;\n    return this;\n  }\n\n  maxDistance(distance: number) {\n    this.config.maxDist = distance;\n    return this;\n  }\n}\n\nexport type LongPressGestureType = InstanceType<typeof LongPressGesture>;\n"]},"metadata":{},"sourceType":"module"}