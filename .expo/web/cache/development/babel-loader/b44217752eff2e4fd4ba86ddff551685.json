{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"mode\", \"edges\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSafeAreaInsets } from \"./SafeAreaContext\";\nvar TOP = 8,\n    RIGHT = 4,\n    BOTTOM = 2,\n    LEFT = 1,\n    ALL = 15;\nvar edgeBitmaskMap = {\n  top: TOP,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT\n};\nexport function SafeAreaView(_ref) {\n  var _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style,\n      mode = _ref.mode,\n      edges = _ref.edges,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var insets = useSafeAreaInsets();\n  var edgeBitmask = edges != null ? edges.reduce(function (accum, edge) {\n    return accum | edgeBitmaskMap[edge];\n  }, 0) : ALL;\n  var appliedStyle = React.useMemo(function () {\n    var insetTop = edgeBitmask & TOP ? insets.top : 0;\n    var insetRight = edgeBitmask & RIGHT ? insets.right : 0;\n    var insetBottom = edgeBitmask & BOTTOM ? insets.bottom : 0;\n    var insetLeft = edgeBitmask & LEFT ? insets.left : 0;\n    var flatStyle = StyleSheet.flatten(style);\n\n    if (mode === 'margin') {\n      var _flatStyle$margin = flatStyle.margin,\n          margin = _flatStyle$margin === void 0 ? 0 : _flatStyle$margin,\n          _flatStyle$marginVert = flatStyle.marginVertical,\n          marginVertical = _flatStyle$marginVert === void 0 ? margin : _flatStyle$marginVert,\n          _flatStyle$marginHori = flatStyle.marginHorizontal,\n          marginHorizontal = _flatStyle$marginHori === void 0 ? margin : _flatStyle$marginHori,\n          _flatStyle$marginTop = flatStyle.marginTop,\n          marginTop = _flatStyle$marginTop === void 0 ? marginVertical : _flatStyle$marginTop,\n          _flatStyle$marginRigh = flatStyle.marginRight,\n          marginRight = _flatStyle$marginRigh === void 0 ? marginHorizontal : _flatStyle$marginRigh,\n          _flatStyle$marginBott = flatStyle.marginBottom,\n          marginBottom = _flatStyle$marginBott === void 0 ? marginVertical : _flatStyle$marginBott,\n          _flatStyle$marginLeft = flatStyle.marginLeft,\n          marginLeft = _flatStyle$marginLeft === void 0 ? marginHorizontal : _flatStyle$marginLeft;\n      var marginStyle = {\n        marginTop: marginTop + insetTop,\n        marginRight: marginRight + insetRight,\n        marginBottom: marginBottom + insetBottom,\n        marginLeft: marginLeft + insetLeft\n      };\n      return [style, marginStyle];\n    } else {\n      var _flatStyle$padding = flatStyle.padding,\n          padding = _flatStyle$padding === void 0 ? 0 : _flatStyle$padding,\n          _flatStyle$paddingVer = flatStyle.paddingVertical,\n          paddingVertical = _flatStyle$paddingVer === void 0 ? padding : _flatStyle$paddingVer,\n          _flatStyle$paddingHor = flatStyle.paddingHorizontal,\n          paddingHorizontal = _flatStyle$paddingHor === void 0 ? padding : _flatStyle$paddingHor,\n          _flatStyle$paddingTop = flatStyle.paddingTop,\n          paddingTop = _flatStyle$paddingTop === void 0 ? paddingVertical : _flatStyle$paddingTop,\n          _flatStyle$paddingRig = flatStyle.paddingRight,\n          paddingRight = _flatStyle$paddingRig === void 0 ? paddingHorizontal : _flatStyle$paddingRig,\n          _flatStyle$paddingBot = flatStyle.paddingBottom,\n          paddingBottom = _flatStyle$paddingBot === void 0 ? paddingVertical : _flatStyle$paddingBot,\n          _flatStyle$paddingLef = flatStyle.paddingLeft,\n          paddingLeft = _flatStyle$paddingLef === void 0 ? paddingHorizontal : _flatStyle$paddingLef;\n      var paddingStyle = {\n        paddingTop: paddingTop + insetTop,\n        paddingRight: paddingRight + insetRight,\n        paddingBottom: paddingBottom + insetBottom,\n        paddingLeft: paddingLeft + insetLeft\n      };\n      return [style, paddingStyle];\n    }\n  }, [style, insets, mode, edgeBitmask]);\n  return React.createElement(View, _extends({\n    style: appliedStyle\n  }, rest));\n}","map":{"version":3,"sources":["SafeAreaView.web.tsx"],"names":["TOP","RIGHT","BOTTOM","LEFT","ALL","edgeBitmaskMap","top","right","bottom","left","style","rest","insets","useSafeAreaInsets","edgeBitmask","edges","accum","appliedStyle","insetTop","insetRight","insetBottom","insetLeft","flatStyle","StyleSheet","mode","margin","marginVertical","marginHorizontal","marginTop","marginRight","marginBottom","marginLeft","marginStyle","padding","paddingVertical","paddingHorizontal","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingStyle"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useSafeAreaInsets } from './SafeAreaContext';\nimport type { Edge, NativeSafeAreaViewProps } from './SafeArea.types';\n\n// prettier-ignore\nconst TOP    = 0b1000,\n      RIGHT  = 0b0100,\n      BOTTOM = 0b0010,\n      LEFT   = 0b0001,\n      ALL    = 0b1111;\n\n/* eslint-disable no-bitwise */\n\nconst edgeBitmaskMap: Record<Edge, number> = {\n  top: TOP,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT,\n};\n\nexport function SafeAreaView({\n  style = {},\n  mode,\n  edges,\n  ...rest\n}: NativeSafeAreaViewProps) {\n  const insets = useSafeAreaInsets();\n\n  const edgeBitmask =\n    edges != null\n      ? edges.reduce((accum, edge) => accum | edgeBitmaskMap[edge], 0)\n      : ALL;\n\n  const appliedStyle = React.useMemo(() => {\n    const insetTop = edgeBitmask & TOP ? insets.top : 0;\n    const insetRight = edgeBitmask & RIGHT ? insets.right : 0;\n    const insetBottom = edgeBitmask & BOTTOM ? insets.bottom : 0;\n    const insetLeft = edgeBitmask & LEFT ? insets.left : 0;\n\n    const flatStyle = StyleSheet.flatten(style) as Record<string, number>;\n\n    if (mode === 'margin') {\n      const {\n        margin = 0,\n        marginVertical = margin,\n        marginHorizontal = margin,\n        marginTop = marginVertical,\n        marginRight = marginHorizontal,\n        marginBottom = marginVertical,\n        marginLeft = marginHorizontal,\n      } = flatStyle;\n\n      const marginStyle = {\n        marginTop: marginTop + insetTop,\n        marginRight: marginRight + insetRight,\n        marginBottom: marginBottom + insetBottom,\n        marginLeft: marginLeft + insetLeft,\n      };\n\n      return [style, marginStyle];\n    } else {\n      const {\n        padding = 0,\n        paddingVertical = padding,\n        paddingHorizontal = padding,\n        paddingTop = paddingVertical,\n        paddingRight = paddingHorizontal,\n        paddingBottom = paddingVertical,\n        paddingLeft = paddingHorizontal,\n      } = flatStyle;\n\n      const paddingStyle = {\n        paddingTop: paddingTop + insetTop,\n        paddingRight: paddingRight + insetRight,\n        paddingBottom: paddingBottom + insetBottom,\n        paddingLeft: paddingLeft + insetLeft,\n      };\n\n      return [style, paddingStyle];\n    }\n  }, [style, insets, mode, edgeBitmask]);\n\n  return <View style={appliedStyle} {...rest} />;\n}\n"]},"metadata":{},"sourceType":"module"}