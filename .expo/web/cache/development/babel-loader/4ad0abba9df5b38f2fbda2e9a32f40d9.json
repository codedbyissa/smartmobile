{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nimport Appearance from \"react-native-web/dist/exports/Appearance\";\nimport { ThemeProvider } from \"./theming\";\nimport { Provider as SettingsProvider } from \"./settings\";\nimport MaterialCommunityIcon from \"../components/MaterialCommunityIcon\";\nimport PortalHost from \"../components/Portal/PortalHost\";\nimport DefaultTheme from \"../styles/DefaultTheme\";\nimport DarkTheme from \"../styles/DarkTheme\";\nimport { addEventListener } from \"../utils/addEventListener\";\n\nvar Provider = function Provider(_ref) {\n  var props = _extends({}, _ref);\n\n  var colorSchemeName = !props.theme && (Appearance === null || Appearance === void 0 ? void 0 : Appearance.getColorScheme()) || 'light';\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      reduceMotionEnabled = _React$useState2[0],\n      setReduceMotionEnabled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(colorSchemeName),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      colorScheme = _React$useState4[0],\n      setColorScheme = _React$useState4[1];\n\n  var handleAppearanceChange = function handleAppearanceChange(preferences) {\n    var colorScheme = preferences.colorScheme;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(function () {\n    var subscription;\n\n    if (!props.theme) {\n      subscription = addEventListener(AccessibilityInfo, 'reduceMotionChanged', setReduceMotionEnabled);\n    }\n\n    return function () {\n      if (!props.theme) {\n        var _subscription;\n\n        (_subscription = subscription) === null || _subscription === void 0 ? void 0 : _subscription.remove();\n      }\n    };\n  }, [props.theme]);\n  React.useEffect(function () {\n    var appearanceSubscription;\n\n    if (!props.theme) {\n      appearanceSubscription = Appearance === null || Appearance === void 0 ? void 0 : Appearance.addChangeListener(handleAppearanceChange);\n    }\n\n    return function () {\n      if (!props.theme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          Appearance === null || Appearance === void 0 ? void 0 : Appearance.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme]);\n\n  var getTheme = function getTheme() {\n    var providedTheme = props.theme;\n\n    if (providedTheme) {\n      return providedTheme;\n    } else {\n      var theme = colorScheme === 'dark' ? DarkTheme : DefaultTheme;\n      return _objectSpread(_objectSpread({}, theme), {}, {\n        animation: _objectSpread(_objectSpread({}, theme.animation), {}, {\n          scale: reduceMotionEnabled ? 0 : 1\n        })\n      });\n    }\n  };\n\n  var children = props.children,\n      settings = props.settings;\n  return React.createElement(PortalHost, null, React.createElement(SettingsProvider, {\n    value: settings || {\n      icon: MaterialCommunityIcon\n    }\n  }, React.createElement(ThemeProvider, {\n    theme: getTheme()\n  }, children)));\n};\n\nexport default Provider;","map":{"version":3,"sources":["Provider.tsx"],"names":["Provider","props","colorSchemeName","Appearance","React","handleAppearanceChange","preferences","colorScheme","setColorScheme","subscription","addEventListener","appearanceSubscription","getTheme","theme","providedTheme","animation","scale","reduceMotionEnabled","settings","icon","MaterialCommunityIcon"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityInfo,\n  Appearance,\n  ColorSchemeName,\n  NativeEventSubscription,\n} from 'react-native';\nimport { ThemeProvider } from './theming';\nimport { Provider as SettingsProvider, Settings } from './settings';\nimport MaterialCommunityIcon from '../components/MaterialCommunityIcon';\nimport PortalHost from '../components/Portal/PortalHost';\nimport DefaultTheme from '../styles/DefaultTheme';\nimport DarkTheme from '../styles/DarkTheme';\nimport { addEventListener } from '../utils/addEventListener';\n\ntype Props = {\n  children: React.ReactNode;\n  theme?: ReactNativePaper.Theme;\n  settings?: Settings;\n};\n\nconst Provider = ({ ...props }: Props) => {\n  const colorSchemeName =\n    (!props.theme && Appearance?.getColorScheme()) || 'light';\n\n  const [reduceMotionEnabled, setReduceMotionEnabled] =\n    React.useState<boolean>(false);\n  const [colorScheme, setColorScheme] =\n    React.useState<ColorSchemeName>(colorSchemeName);\n\n  const handleAppearanceChange = (\n    preferences: Appearance.AppearancePreferences\n  ) => {\n    const { colorScheme } = preferences;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(() => {\n    let subscription: NativeEventSubscription | undefined;\n\n    if (!props.theme) {\n      subscription = addEventListener(\n        AccessibilityInfo,\n        'reduceMotionChanged',\n        setReduceMotionEnabled\n      );\n    }\n    return () => {\n      if (!props.theme) {\n        subscription?.remove();\n      }\n    };\n  }, [props.theme]);\n\n  React.useEffect(() => {\n    let appearanceSubscription: NativeEventSubscription | undefined;\n    if (!props.theme) {\n      appearanceSubscription = Appearance?.addChangeListener(\n        handleAppearanceChange\n      ) as NativeEventSubscription | undefined;\n    }\n    return () => {\n      if (!props.theme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          Appearance?.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme]);\n\n  const getTheme = () => {\n    const { theme: providedTheme } = props;\n\n    if (providedTheme) {\n      return providedTheme;\n    } else {\n      const theme = (\n        colorScheme === 'dark' ? DarkTheme : DefaultTheme\n      ) as ReactNativePaper.Theme;\n\n      return {\n        ...theme,\n        animation: {\n          ...theme.animation,\n          scale: reduceMotionEnabled ? 0 : 1,\n        },\n      };\n    }\n  };\n\n  const { children, settings } = props;\n  return (\n    <PortalHost>\n      <SettingsProvider value={settings || { icon: MaterialCommunityIcon }}>\n        <ThemeProvider theme={getTheme()}>{children}</ThemeProvider>\n      </SettingsProvider>\n    </PortalHost>\n  );\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}