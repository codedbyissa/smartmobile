{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { Container, Content, BackContainer, BackContent, TopContainer, TopContainerModal, SearchInput, SearchInputModal, ContainerSearch, Filter, DataContent, DataLab, DataReplyLab, DataLimiter, IconsContent, IconContent, ContainerFilterModal, FilterContent, FilterForm, Close, BackModal, DataInput } from \"./styles/orcamentos\";\nimport { ContainerControlCliente, ContainerLabCliente, ContainerSelectCliente, InputLab, LabSelect, SetSelect, ContainerModal, BackLab, DataView, Selected } from \"./styles/atendimento\";\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faRightFromBracket, faHouse, faArrowUpAZ, faMagnifyingGlass, faEye, faCircleXmark, faCaretDown, faCircleCheck, faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { QueryClient, useQuery, useInfiniteQuery, QueryClientProvider } from \"react-query\";\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthenticationContext } from \"../context/authentication\";\nimport { ConfigContext } from \"../context/config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Orcamentos() {\n  return _jsx(QueryClientProvider, {\n    client: queryClient,\n    children: _jsx(Conteudo, {})\n  });\n}\n\nvar queryClient = new QueryClient();\n\nfunction get(baseUrl) {\n  var response;\n  return _regeneratorRuntime.async(function get$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"http://\" + baseUrl));\n\n        case 2:\n          response = _context.sent;\n          return _context.abrupt(\"return\", response.json());\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getOrcamentos(_ref) {\n  var _ref2, pageParam, searchParam, cliente, data, baseUrl, codvendedor, response;\n\n  return _regeneratorRuntime.async(function getOrcamentos$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _ref2 = _slicedToArray(_ref, 6), pageParam = _ref2[0], searchParam = _ref2[1], cliente = _ref2[2], data = _ref2[3], baseUrl = _ref2[4], codvendedor = _ref2[5];\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"http://\" + baseUrl + \"/C000056?codvendedor=\" + codvendedor + \"&s=\" + searchParam + \"&c=\" + cliente + \"&d=\" + data + \"&page=\" + pageParam));\n\n        case 3:\n          response = _context2.sent;\n          return _context2.abrupt(\"return\", response.json());\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getClientes(_ref3) {\n  var _ref4, pageParam, searchParam, baseUrl, response;\n\n  return _regeneratorRuntime.async(function getClientes$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _ref4 = _slicedToArray(_ref3, 3), pageParam = _ref4[0], searchParam = _ref4[1], baseUrl = _ref4[2];\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"http://\" + baseUrl + \"/C000007?s=\" + searchParam + \"&page=\" + pageParam));\n\n        case 3:\n          response = _context3.sent;\n          return _context3.abrupt(\"return\", response.json());\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction Conteudo() {\n  var _useContext = useContext(AuthenticationContext),\n      LogOut = _useContext.LogOut,\n      user = _useContext.user;\n\n  var _useContext2 = useContext(ConfigContext),\n      baseUrl = _useContext2.baseUrl;\n\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchText = _useState2[0],\n      setSearchText = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filterModal = _useState4[0],\n      setFilterModal = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      clientModal = _useState6[0],\n      setClientModal = _useState6[1];\n\n  var _useState7 = useState({\n    cod: '',\n    cliente: ''\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedCliente = _useState8[0],\n      setSelectedCliente = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      data = _useState10[0],\n      setData = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      searchClient = _useState12[0],\n      setSearchClient = _useState12[1];\n\n  var check = useQuery([\"check\", baseUrl], function () {\n    return get(baseUrl);\n  }, {\n    staleTime: 5000,\n    cacheTime: 4000\n  });\n  var orcamentos = useInfiniteQuery([\"orcamentos\", searchText, selectedCliente.cod, data, baseUrl, user.CODIGO], function (_ref5) {\n    var _ref5$pageParam = _ref5.pageParam,\n        pageParam = _ref5$pageParam === void 0 ? 1 : _ref5$pageParam;\n    return getOrcamentos([pageParam, searchText, selectedCliente.cod, data, baseUrl, user.CODIGO]);\n  }, {\n    getNextPageParam: function getNextPageParam(page) {\n      return page.current_page === page.last_page ? null : page.current_page + 1;\n    }\n  }, {\n    staleTime: 5000,\n    cacheTime: 4000\n  });\n\n  var loadMoreOrcamentos = function loadMoreOrcamentos() {\n    if (orcamentos.hasNextPage) {\n      orcamentos.fetchNextPage();\n    }\n  };\n\n  var clientes = useInfiniteQuery([\"clientes\", searchClient, baseUrl], function (_ref6) {\n    var _ref6$pageParam = _ref6.pageParam,\n        pageParam = _ref6$pageParam === void 0 ? 1 : _ref6$pageParam;\n    return getClientes([pageParam, searchClient, baseUrl]);\n  }, {\n    getNextPageParam: function getNextPageParam(page) {\n      return page.current_page === page.last_page ? null : page.current_page + 1;\n    }\n  }, {\n    staleTime: 5000,\n    cacheTime: 4000\n  });\n\n  var loadMoreClientes = function loadMoreClientes() {\n    if (clientes.hasNextPage) {\n      clientes.fetchNextPage();\n    }\n  };\n\n  var renderSpinner = function renderSpinner() {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        backgroundColor: '#dbdbdb',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#677689\"\n      })\n    });\n  };\n\n  if (check.isLoading) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        backgroundColor: '#dbdbdb',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#677689\"\n      })\n    });\n  }\n\n  if (check.isError) {\n    return _jsx(Container, {\n      children: _jsx(DataLab, {\n        children: \" Tente Novamente \"\n      })\n    });\n  }\n\n  if (check.isSuccess) {\n    return _jsxs(Container, {\n      children: [_jsxs(TopContainer, {\n        children: [_jsx(ContainerSearch, {\n          children: _jsx(FontAwesomeIcon, {\n            icon: faMagnifyingGlass,\n            size: 25,\n            color: '#677689'\n          })\n        }), _jsx(SearchInput, {\n          placeholder: \"Buscar Orcamentos\",\n          name: searchText,\n          onChangeText: function onChangeText(t) {\n            return setSearchText(t);\n          }\n        }), _jsx(Filter, {\n          onPress: function onPress() {\n            return setFilterModal(true);\n          },\n          children: _jsx(FontAwesomeIcon, {\n            icon: faArrowUpAZ,\n            size: 25,\n            color: '#677689'\n          })\n        })]\n      }), _jsx(Content, {\n        Style: {\n          alignItems: 'center'\n        },\n        children: orcamentos.isSuccess ? _jsx(FlatList, {\n          onEndReached: loadMoreOrcamentos,\n          onEndReachedThreshold: 0.5,\n          ListFooterComponent: orcamentos.isFetching ? renderSpinner : null,\n          data: orcamentos.data.pages.map(function (page) {\n            return page.data;\n          }).flat(),\n          keyExtractor: function keyExtractor(item) {\n            return item.CODIGO;\n          },\n          renderItem: function renderItem(_ref7) {\n            var item = _ref7.item;\n            return _jsx(View, {\n              children: item.cliente ? _jsxs(DataContent, {\n                children: [_jsxs(DataLimiter, {\n                  children: [_jsxs(DataLab, {\n                    children: [\" Codigo: \", _jsxs(DataReplyLab, {\n                      children: [\" \", item.CODIGO, \" \"]\n                    }), \" \"]\n                  }), _jsxs(DataLab, {\n                    children: [\" Cliente: \", _jsxs(DataReplyLab, {\n                      children: [\" \", item.cliente.NOME, \" \", item.cliente.APELIDO, \" \"]\n                    }), \" \"]\n                  }), _jsxs(DataLab, {\n                    children: [\" Data: \", _jsxs(DataReplyLab, {\n                      children: [\" \", item.DATA, \" \"]\n                    }), \" \"]\n                  })]\n                }), _jsx(IconsContent, {\n                  children: _jsx(IconContent, {\n                    onPress: function onPress() {\n                      return navigation.navigate('ShowOrcamento', {\n                        cod: item.CODIGO\n                      });\n                    },\n                    children: _jsx(FontAwesomeIcon, {\n                      icon: faEye,\n                      size: 21,\n                      color: '#dbdbdb'\n                    })\n                  })\n                })]\n              }) : null\n            });\n          }\n        }) : _jsx(View, {\n          style: {\n            flex: 1,\n            backgroundColor: '#dbdbdb',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: _jsx(ActivityIndicator, {\n            size: \"large\",\n            color: \"#677689\"\n          })\n        })\n      }), _jsxs(BackContainer, {\n        children: [_jsx(BackContent, {\n          onPress: function onPress() {\n            return navigation.navigate('Start');\n          },\n          children: _jsx(FontAwesomeIcon, {\n            icon: faHouse,\n            size: 52,\n            color: '#677689'\n          })\n        }), _jsx(BackContent, {\n          onPress: function onPress() {\n            LogOut();\n            navigation.navigate('Start');\n          },\n          children: _jsx(FontAwesomeIcon, {\n            icon: faRightFromBracket,\n            size: 52,\n            color: '#677689'\n          })\n        })]\n      }), _jsx(Modal, {\n        visible: filterModal,\n        statusBarTranslucent: true,\n        transparent: true,\n        animationType: \"fade\",\n        onRequestClose: function onRequestClose() {\n          return setFilterModal(false);\n        },\n        children: _jsx(ContainerFilterModal, {\n          children: _jsxs(FilterContent, {\n            children: [_jsx(Close, {\n              onPress: function onPress() {\n                return setFilterModal(false);\n              },\n              children: _jsx(FontAwesomeIcon, {\n                icon: faCircleXmark,\n                size: 25,\n                color: '#e95361'\n              })\n            }), _jsxs(FilterForm, {\n              children: [_jsxs(ContainerControlCliente, {\n                children: [_jsx(ContainerLabCliente, {\n                  children: _jsx(InputLab, {\n                    children: \" Cliente \"\n                  })\n                }), _jsxs(ContainerSelectCliente, {\n                  onPress: function onPress() {\n                    return setClientModal(true);\n                  },\n                  children: [selectedCliente.cod == '' ? _jsx(LabSelect, {\n                    children: \" Selecione por favor \"\n                  }) : _jsxs(LabSelect, {\n                    children: [\" \", selectedCliente.cliente, \" \"]\n                  }), _jsx(SetSelect, {\n                    children: _jsx(FontAwesomeIcon, {\n                      icon: faCaretDown,\n                      size: 15,\n                      color: '#677689'\n                    })\n                  })]\n                })]\n              }), _jsxs(ContainerControlCliente, {\n                children: [_jsx(ContainerLabCliente, {\n                  children: _jsx(InputLab, {\n                    children: \" Data \"\n                  })\n                }), _jsx(DataInput, {\n                  onChangeText: function onChangeText(t) {\n                    return setData(t);\n                  },\n                  children: data\n                })]\n              })]\n            })]\n          })\n        })\n      }), _jsxs(Modal, {\n        statusBarTranslucent: true,\n        visible: clientModal,\n        transparent: true,\n        animationType: \"fade\",\n        onRequestClose: function onRequestClose() {\n          return setClientModal(false);\n        },\n        children: [_jsxs(ContainerModal, {\n          children: [_jsxs(TopContainerModal, {\n            children: [_jsx(ContainerSearch, {\n              children: _jsx(FontAwesomeIcon, {\n                icon: faMagnifyingGlass,\n                size: 25,\n                color: '#677689'\n              })\n            }), _jsx(SearchInputModal, {\n              placeholder: \"Buscar Cliente\",\n              name: searchClient,\n              onChangeText: function onChangeText(t) {\n                return setSearchClient(t);\n              }\n            })]\n          }), _jsxs(DataView, {\n            children: [_jsxs(View, {\n              style: {\n                margin: 10\n              },\n              children: [_jsx(DataLab, {\n                children: \" Selecione por favor \"\n              }), selectedCliente.cod == '' ? _jsx(Selected, {\n                children: _jsx(FontAwesomeIcon, {\n                  icon: faCircleCheck,\n                  size: 35,\n                  color: '#8395ab'\n                })\n              }) : _jsx(Selected, {\n                onPress: function onPress() {\n                  return setSelectedCliente({\n                    cod: '',\n                    cliente: ''\n                  });\n                },\n                children: _jsx(FontAwesomeIcon, {\n                  icon: faCircle,\n                  size: 35,\n                  color: '#b9b7b7'\n                })\n              })]\n            }, 0), clientes.isSuccess ? _jsx(FlatList, {\n              onEndReached: loadMoreClientes,\n              onEndReachedThreshold: 0.5,\n              ListFooterComponent: clientes.isFetching ? renderSpinner : null,\n              data: clientes.data.pages.map(function (page) {\n                return page.data;\n              }).flat(),\n              keyExtractor: function keyExtractor(item) {\n                return item.CODIGO;\n              },\n              renderItem: function renderItem(_ref8) {\n                var item = _ref8.item;\n                return _jsxs(View, {\n                  style: {\n                    margin: 10\n                  },\n                  children: [_jsxs(DataLab, {\n                    children: [\" Codigo: \", _jsxs(DataReplyLab, {\n                      children: [\" \", item.CODIGO, \" \"]\n                    }), \" \"]\n                  }, item.CODIGO), _jsxs(DataLab, {\n                    children: [\" Cliente: \", _jsxs(DataReplyLab, {\n                      children: [\" \", item.NOME, \" \", item.APELIDO, \" \"]\n                    }), \" \"]\n                  }), _jsxs(DataLab, {\n                    children: [\" CPF: \", _jsxs(DataReplyLab, {\n                      children: [\" \", item.CPF, \" \"]\n                    }), \" \"]\n                  }), item.CODIGO == selectedCliente.cod ? _jsx(Selected, {\n                    children: _jsx(FontAwesomeIcon, {\n                      icon: faCircleCheck,\n                      size: 35,\n                      color: '#8395ab'\n                    })\n                  }) : _jsx(Selected, {\n                    onPress: function onPress() {\n                      return setSelectedCliente({\n                        cod: item.CODIGO,\n                        cliente: item.NOME + ' ' + item.APELIDO\n                      });\n                    },\n                    children: _jsx(FontAwesomeIcon, {\n                      icon: faCircle,\n                      size: 35,\n                      color: '#b9b7b7'\n                    })\n                  })]\n                });\n              }\n            }) : _jsx(View, {\n              style: {\n                flex: 1,\n                backgroundColor: '#dbdbdb',\n                alignItems: 'center',\n                justifyContent: 'center'\n              },\n              children: _jsx(ActivityIndicator, {\n                size: \"large\",\n                color: \"#677689\"\n              })\n            })]\n          })]\n        }), _jsx(BackModal, {\n          onPress: function onPress() {\n            return setClientModal(false);\n          },\n          children: _jsx(BackLab, {\n            children: \" Voltar \"\n          })\n        })]\n      })]\n    });\n  }\n}\n\nexport default Orcamentos;","map":{"version":3,"names":["React","useContext","useState","Container","Content","BackContainer","BackContent","TopContainer","TopContainerModal","SearchInput","SearchInputModal","ContainerSearch","Filter","DataContent","DataLab","DataReplyLab","DataLimiter","IconsContent","IconContent","ContainerFilterModal","FilterContent","FilterForm","Close","BackModal","DataInput","ContainerControlCliente","ContainerLabCliente","ContainerSelectCliente","InputLab","LabSelect","SetSelect","ContainerModal","BackLab","DataView","Selected","FontAwesomeIcon","faRightFromBracket","faHouse","faArrowUpAZ","faMagnifyingGlass","faEye","faCircleXmark","faCaretDown","faCircleCheck","faCircle","QueryClient","useQuery","useInfiniteQuery","QueryClientProvider","useNavigation","AuthenticationContext","ConfigContext","Orcamentos","queryClient","get","baseUrl","fetch","response","json","getOrcamentos","pageParam","searchParam","cliente","data","codvendedor","getClientes","Conteudo","LogOut","user","navigation","searchText","setSearchText","filterModal","setFilterModal","clientModal","setClientModal","cod","selectedCliente","setSelectedCliente","setData","searchClient","setSearchClient","check","staleTime","cacheTime","orcamentos","CODIGO","getNextPageParam","page","current_page","last_page","loadMoreOrcamentos","hasNextPage","fetchNextPage","clientes","loadMoreClientes","renderSpinner","flex","backgroundColor","alignItems","justifyContent","isLoading","isError","isSuccess","t","isFetching","pages","map","flat","item","NOME","APELIDO","DATA","navigate","margin","CPF"],"sources":["C:/React N/SmartMobile/src/app/screens/orcamentos/orcamentos.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { FlatList, ActivityIndicator, View, Modal } from 'react-native';\r\nimport { Container, Content, BackContainer, BackContent, TopContainer, TopContainerModal, SearchInput, \r\n  SearchInputModal, ContainerSearch, Filter, DataContent, DataLab, DataReplyLab, DataLimiter, IconsContent, \r\n  IconContent, ContainerFilterModal, FilterContent, FilterForm, Close, BackModal, DataInput } from \"./styles/orcamentos\";\r\nimport { ContainerControlCliente, ContainerLabCliente, ContainerSelectCliente, InputLab,\r\n   LabSelect, SetSelect, ContainerModal, BackLab, DataView, Selected } from \"./styles/atendimento\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\r\nimport { faRightFromBracket, faHouse, faArrowUpAZ, faMagnifyingGlass, \r\n  faEye, faCircleXmark, faCaretDown, faCircleCheck, faCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { QueryClient, useQuery, useInfiniteQuery, QueryClientProvider } from \"react-query\";\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { AuthenticationContext } from '../context/authentication';\r\nimport { ConfigContext } from '../context/config';\r\n\r\nfunction Orcamentos() {\r\n  \r\n  return (  \r\n    <QueryClientProvider client={queryClient}>\r\n      <Conteudo/>\r\n    </QueryClientProvider>\r\n   \r\n  )\r\n}\r\n\r\nconst queryClient = new QueryClient()\r\n\r\n// checar se a api esta online\r\n\r\nasync function get(baseUrl) {\r\n  const response = await fetch(\r\n    `http://${baseUrl}`\r\n  );\r\n\r\n   return response.json(); \r\n\r\n}\r\n\r\n// listar orcamentos\r\n\r\nasync function getOrcamentos([pageParam, searchParam, cliente, data, baseUrl, codvendedor]) {\r\n  const response = await fetch(\r\n    `http://${baseUrl}/C000056?codvendedor=${codvendedor}&s=${searchParam}&c=${cliente}&d=${data}&page=${pageParam}`\r\n  );\r\n   return response.json(); \r\n}\r\n\r\n// listar clientes\r\n\r\nasync function getClientes([pageParam, searchParam, baseUrl]) {\r\n  const response = await fetch(\r\n    `http://${baseUrl}/C000007?s=${searchParam}&page=${pageParam}`\r\n  );\r\n\r\n   return response.json(); \r\n\r\n}\r\n\r\nfunction Conteudo() {\r\n  const { LogOut, user } = useContext(AuthenticationContext)\r\n  const { baseUrl } = useContext(ConfigContext)\r\n  const navigation = useNavigation(); // navigation\r\n  const [searchText, setSearchText] = useState('');\r\n  const [filterModal, setFilterModal] = useState(false);\r\n  const [clientModal, setClientModal] = useState(false); // modal clientes\r\n  const [selectedCliente, setSelectedCliente] = useState({cod: '', cliente: '', }); // cliente selecionada\r\n  const [data, setData] = useState('');\r\n  const [searchClient, setSearchClient] = useState(''); // buscar clientes \r\n\r\n        // query checar se a api esta online\r\n        const check = useQuery( \r\n          [\"check\", baseUrl], () => get(baseUrl), {\r\n            staleTime: 5000, cacheTime: 4000\r\n          },\r\n        );\r\n  \r\n        // query orcamentos\r\n        const orcamentos = useInfiniteQuery(    \r\n          [\"orcamentos\", searchText, selectedCliente.cod, data, baseUrl, user.CODIGO ], ({ pageParam = 1 }) => getOrcamentos([pageParam, searchText, selectedCliente.cod, data, baseUrl, user.CODIGO]), \r\n          { getNextPageParam: (page) => (page.current_page === page.last_page ? null : page.current_page + 1 ) },\r\n          {  staleTime: 5000, cacheTime: 4000 },\r\n        );\r\n\r\n        // load orcamentos\r\n        const loadMoreOrcamentos = () => {  if (orcamentos.hasNextPage) {  orcamentos.fetchNextPage();  }  };\r\n\r\n        \r\n        // query clientes\r\n        const clientes = useInfiniteQuery(    \r\n          [\"clientes\", searchClient, baseUrl ], ({ pageParam = 1 }) => getClientes([pageParam, searchClient, baseUrl]), \r\n          { getNextPageParam: (page) => (page.current_page === page.last_page ? null : page.current_page + 1 ) },\r\n          {  staleTime: 5000, cacheTime: 4000 },\r\n        );\r\n\r\n        // load clientes\r\n        const loadMoreClientes = () => {  if (clientes.hasNextPage) {  clientes.fetchNextPage();  }  };\r\n\r\n        const renderSpinner = () => { return <View style={{flex:1,\r\n        backgroundColor:'#dbdbdb',\r\n        alignItems:'center',\r\n        justifyContent:'center', }}>   \r\n        <ActivityIndicator size=\"large\" color=\"#677689\" />\r\n        </View>;  };\r\n\r\n      if (check.isLoading) {\r\n        return (\r\n          <View style={{flex:1,\r\n          backgroundColor:'#dbdbdb',\r\n          alignItems:'center',\r\n          justifyContent:'center', }}>   \r\n          <ActivityIndicator size=\"large\" color=\"#677689\" />\r\n          </View>\r\n        )\r\n      }\r\n      if (check.isError) {\r\n        return (\r\n          <Container>\r\n          <DataLab> Tente Novamente </DataLab>\r\n          </Container>\r\n        )\r\n  \r\n      }\r\n      if (check.isSuccess) {\r\n\r\n       // console.log(selectedCliente.cod)\r\n        \r\n    return (\r\n        <Container>     \r\n          <TopContainer>\r\n          <ContainerSearch>\r\n          <FontAwesomeIcon icon={faMagnifyingGlass} size={ 25 } color={ '#677689' }/>\r\n          </ContainerSearch>                       \r\n          <SearchInput\r\n          placeholder='Buscar Orcamentos'\r\n          name={searchText}\r\n          onChangeText={(t) => setSearchText(t)}/>\r\n          <Filter onPress={() => setFilterModal(true)}>                               \r\n          <FontAwesomeIcon icon={faArrowUpAZ}  size={ 25 } color={ '#677689' }/>\r\n          </Filter>                             \r\n          </TopContainer>\r\n            \r\n          <Content Style={{alignItems: 'center' }}>\r\n\r\n          {orcamentos.isSuccess? <FlatList\r\n        onEndReached={loadMoreOrcamentos}\r\n        onEndReachedThreshold={0.5}\r\n        ListFooterComponent={orcamentos.isFetching ? renderSpinner : null}\r\n        data={(orcamentos.data.pages.map((page) => page.data)).flat()}    \r\n        keyExtractor={(item) => item.CODIGO}    \r\n        renderItem={({ item }) => {\r\n          return <View>\r\n          {item.cliente? <DataContent>\r\n               \r\n          <DataLimiter>\r\n          <DataLab> Codigo: <DataReplyLab> {item.CODIGO} </DataReplyLab> </DataLab>\r\n          <DataLab> Cliente: <DataReplyLab> {item.cliente.NOME} {item.cliente.APELIDO} </DataReplyLab> </DataLab> \r\n          <DataLab> Data: <DataReplyLab> {item.DATA} </DataReplyLab> </DataLab>\r\n          </DataLimiter>\r\n\r\n          <IconsContent>\r\n          <IconContent onPress={() => navigation.navigate('ShowOrcamento', { cod: item.CODIGO, })}>\r\n          <FontAwesomeIcon icon={faEye} size={ 21 } color={ '#dbdbdb' } />  \r\n          </IconContent>\r\n          </IconsContent>\r\n\r\n          </DataContent> : null}\r\n          </View>;\r\n        }}/> : <View style={{flex:1,\r\n          backgroundColor:'#dbdbdb',\r\n          alignItems:'center',\r\n          justifyContent:'center', }}>   \r\n          <ActivityIndicator size=\"large\" color=\"#677689\" />\r\n          </View>  }\r\n          \r\n          </Content> \r\n\r\n          <BackContainer>\r\n            <BackContent onPress={() => navigation.navigate('Start')}>             \r\n            <FontAwesomeIcon icon={faHouse} size={ 52 } color={ '#677689' }/>\r\n            </BackContent>\r\n            <BackContent  onPress={() => {LogOut(); navigation.navigate('Start')}}>             \r\n            <FontAwesomeIcon icon={faRightFromBracket} size={ 52 } color={ '#677689' }/>\r\n            </BackContent>\r\n          </BackContainer>\r\n\r\n          <Modal         \r\n      visible={filterModal}\r\n      statusBarTranslucent={true} \r\n      transparent={true}\r\n      animationType=\"fade\"\r\n      onRequestClose={() => setFilterModal(false)}>\r\n        <ContainerFilterModal>\r\n      \r\n        <FilterContent>\r\n\r\n        <Close onPress={() => setFilterModal(false)}>       \r\n        <FontAwesomeIcon icon={faCircleXmark}  size={ 25 } color={ '#e95361' }/>\r\n        </Close>\r\n        \r\n        <FilterForm>\r\n\r\n        <ContainerControlCliente>\r\n        <ContainerLabCliente>\r\n        <InputLab> Cliente </InputLab>\r\n        </ContainerLabCliente>         \r\n      <ContainerSelectCliente onPress={() => setClientModal(true)}>\r\n        \r\n     \r\n      {selectedCliente.cod == ''?\r\n      <LabSelect> Selecione por favor </LabSelect> : \r\n      <LabSelect> {selectedCliente.cliente} </LabSelect> } \r\n      \r\n      <SetSelect>\r\n      <FontAwesomeIcon icon={faCaretDown}  size={ 15 } color={ '#677689' }/>\r\n      </SetSelect>\r\n\r\n\r\n        </ContainerSelectCliente>\r\n\r\n        </ContainerControlCliente>\r\n        <ContainerControlCliente>\r\n        <ContainerLabCliente>\r\n        <InputLab> Data </InputLab>\r\n        </ContainerLabCliente> \r\n           \r\n        <DataInput onChangeText={(t) => setData(t)}>{data}</DataInput> \r\n       \r\n        </ContainerControlCliente>\r\n\r\n        </FilterForm>\r\n\r\n        </FilterContent>\r\n\r\n        </ContainerFilterModal> \r\n\r\n      </Modal>\r\n\r\n      <Modal\r\n      statusBarTranslucent={true}        \r\n      visible={clientModal}\r\n      transparent={true}\r\n      animationType=\"fade\"\r\n      onRequestClose={() => setClientModal(false)}>\r\n\r\n      <ContainerModal>\r\n\r\n      \r\n      <TopContainerModal>\r\n      <ContainerSearch>\r\n      <FontAwesomeIcon icon={faMagnifyingGlass} size={ 25 } color={ '#677689' }/>\r\n      </ContainerSearch>                       \r\n      <SearchInputModal\r\n      placeholder='Buscar Cliente'\r\n      name={searchClient}\r\n      onChangeText={(t) => setSearchClient(t)}/>                          \r\n      </TopContainerModal>\r\n      \r\n      <DataView> \r\n\r\n            <View key={0} style={{ margin: 10 }}>\r\n\r\n    <DataLab> Selecione por favor </DataLab>\r\n\r\n    {selectedCliente.cod == ''? \r\n    <Selected>\r\n    <FontAwesomeIcon icon={faCircleCheck}  size={ 35 } color={ '#8395ab' }/>       \r\n    </Selected> :\r\n    <Selected onPress={() => setSelectedCliente({cod: '', cliente: '', })}>\r\n    <FontAwesomeIcon icon={faCircle}  size={ 35 } color={ '#b9b7b7' }/>       \r\n    </Selected>\r\n    }\r\n\r\n    </View> \r\n\r\n   {clientes.isSuccess? <FlatList\r\n        onEndReached={loadMoreClientes}\r\n        onEndReachedThreshold={0.5}\r\n        ListFooterComponent={clientes.isFetching ? renderSpinner : null}\r\n        data={(clientes.data.pages.map((page) => page.data)).flat()}    \r\n        keyExtractor={(item) => item.CODIGO}    \r\n        renderItem={({ item }) => {\r\n          return <View style={{ margin: 10 }}>\r\n          <DataLab key={item.CODIGO}> Codigo: <DataReplyLab> {item.CODIGO} </DataReplyLab> </DataLab>\r\n          <DataLab> Cliente: <DataReplyLab> {item.NOME} {item.APELIDO} </DataReplyLab> </DataLab>\r\n          <DataLab> CPF: <DataReplyLab> {item.CPF} </DataReplyLab> </DataLab>\r\n        \r\n        {item.CODIGO == selectedCliente.cod? <Selected>\r\n        <FontAwesomeIcon icon={faCircleCheck}  size={ 35 } color={ '#8395ab' }/>       \r\n        </Selected> : <Selected onPress={() => setSelectedCliente({cod: item.CODIGO, cliente: item.NOME + ' ' + item.APELIDO, })}>\r\n        <FontAwesomeIcon icon={faCircle}  size={ 35 } color={ '#b9b7b7' }/>       \r\n        </Selected> }\r\n        </View>;\r\n        }}/> : <View style={{flex:1,\r\n          backgroundColor:'#dbdbdb',\r\n          alignItems:'center',\r\n          justifyContent:'center', }}>   \r\n          <ActivityIndicator size=\"large\" color=\"#677689\" />\r\n          </View>  }\r\n\r\n    </DataView>\r\n\r\n    </ContainerModal>       \r\n    <BackModal onPress={() => setClientModal(false)}>\r\n    <BackLab> Voltar </BackLab>\r\n    </BackModal>\r\n\r\n    </Modal>  \r\n          \r\n        </Container>\r\n    )\r\n      }\r\n  }\r\n\r\n  export default Orcamentos;"],"mappings":"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"},"metadata":{},"sourceType":"module"}