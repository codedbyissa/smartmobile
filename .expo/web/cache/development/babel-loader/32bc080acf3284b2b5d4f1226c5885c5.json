{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Icon, { isValidIcon, isEqualIcon } from \"./Icon\";\nimport { withTheme } from \"../core/theming\";\n\nvar CrossFadeIcon = function CrossFadeIcon(_ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      source = _ref.source,\n      theme = _ref.theme;\n\n  var _React$useState = React.useState(function () {\n    return source;\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentIcon = _React$useState2[0],\n      setCurrentIcon = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      previousIcon = _React$useState4[0],\n      setPreviousIcon = _React$useState4[1];\n\n  var _React$useRef = React.useRef(new Animated.Value(1)),\n      fade = _React$useRef.current;\n\n  var scale = theme.animation.scale;\n\n  if (currentIcon !== source) {\n    setPreviousIcon(function () {\n      return currentIcon;\n    });\n    setCurrentIcon(function () {\n      return source;\n    });\n  }\n\n  React.useEffect(function () {\n    if (isValidIcon(previousIcon) && !isEqualIcon(previousIcon, currentIcon)) {\n      fade.setValue(1);\n      Animated.timing(fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [currentIcon, previousIcon, fade, scale]);\n  var opacityPrev = fade;\n  var opacityNext = previousIcon ? fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: [1, 0]\n  }) : 1;\n  var rotatePrev = fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['-90deg', '0deg']\n  });\n  var rotateNext = previousIcon ? fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '-180deg']\n  }) : '0deg';\n  return React.createElement(View, {\n    style: [styles.content, {\n      height: size,\n      width: size\n    }]\n  }, previousIcon ? React.createElement(Animated.View, {\n    style: [styles.icon, {\n      opacity: opacityPrev,\n      transform: [{\n        rotate: rotatePrev\n      }]\n    }]\n  }, React.createElement(Icon, {\n    source: previousIcon,\n    size: size,\n    color: color\n  })) : null, React.createElement(Animated.View, {\n    style: [styles.icon, {\n      opacity: opacityNext,\n      transform: [{\n        rotate: rotateNext\n      }]\n    }]\n  }, React.createElement(Icon, {\n    source: currentIcon,\n    size: size,\n    color: color\n  })));\n};\n\nexport default withTheme(CrossFadeIcon);\nvar styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["CrossFadeIcon.tsx"],"names":["CrossFadeIcon","theme","React","current","fade","Animated","scale","currentIcon","setPreviousIcon","setCurrentIcon","isValidIcon","isEqualIcon","duration","toValue","useNativeDriver","opacityPrev","opacityNext","previousIcon","inputRange","outputRange","rotatePrev","rotateNext","styles","height","width","size","opacity","transform","rotate","color","withTheme","content","alignItems","justifyContent","icon","position","top","left","right","bottom"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport Icon, { isValidIcon, IconSource, isEqualIcon } from './Icon';\n\nimport { withTheme } from '../core/theming';\n\ntype Props = {\n  /**\n   * Icon to display for the `CrossFadeIcon`.\n   */\n  source: IconSource;\n  /**\n   * Color of the icon.\n   */\n  color: string;\n  /**\n   * Size of the icon.\n   */\n  size: number;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst CrossFadeIcon = ({ color, size, source, theme }: Props) => {\n  const [currentIcon, setCurrentIcon] = React.useState<IconSource>(\n    () => source\n  );\n  const [previousIcon, setPreviousIcon] = React.useState<IconSource | null>(\n    null\n  );\n  const { current: fade } = React.useRef<Animated.Value>(new Animated.Value(1));\n\n  const { scale } = theme.animation;\n\n  if (currentIcon !== source) {\n    setPreviousIcon(() => currentIcon);\n    setCurrentIcon(() => source);\n  }\n\n  React.useEffect(() => {\n    if (isValidIcon(previousIcon) && !isEqualIcon(previousIcon, currentIcon)) {\n      fade.setValue(1);\n\n      Animated.timing(fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [currentIcon, previousIcon, fade, scale]);\n\n  const opacityPrev = fade;\n  const opacityNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0],\n      })\n    : 1;\n\n  const rotatePrev = fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['-90deg', '0deg'],\n  });\n\n  const rotateNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '-180deg'],\n      })\n    : '0deg';\n\n  return (\n    <View\n      style={[\n        styles.content,\n        {\n          height: size,\n          width: size,\n        },\n      ]}\n    >\n      {previousIcon ? (\n        <Animated.View\n          style={[\n            styles.icon,\n            {\n              opacity: opacityPrev,\n              transform: [{ rotate: rotatePrev }],\n            },\n          ]}\n        >\n          <Icon source={previousIcon} size={size} color={color} />\n        </Animated.View>\n      ) : null}\n      <Animated.View\n        style={[\n          styles.icon,\n          {\n            opacity: opacityNext,\n            transform: [{ rotate: rotateNext }],\n          },\n        ]}\n      >\n        <Icon source={currentIcon} size={size} color={color} />\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default withTheme(CrossFadeIcon);\n\nconst styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}