{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createContext, useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var AuthenticationContext = createContext();\nexport var AuthenticationProvider = function AuthenticationProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoggedin = _useState2[0],\n      setIsLoggedin = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userPermissions = _useState6[0],\n      setUserPermissions = _useState6[1];\n\n  var setUserInfos = function setUserInfos(user) {\n    setUser(user);\n    setUserPermissions(user.ALTERA_MOBILE.split(\",\"));\n  };\n\n  var LogIn = function LogIn(user) {\n    setUser(user);\n    setUserPermissions(user.ALTERA_MOBILE.split(\",\"));\n    setIsLoggedin(true);\n  };\n\n  var LogOut = function LogOut() {\n    setUser({});\n    setUserPermissions([]);\n    setIsLoggedin(false);\n  };\n\n  return _jsx(AuthenticationContext.Provider, {\n    value: {\n      isLoggedin: isLoggedin,\n      user: user,\n      userPermissions: userPermissions,\n      LogIn: LogIn,\n      LogOut: LogOut,\n      setUserInfos: setUserInfos\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["createContext","useState","AuthenticationContext","AuthenticationProvider","children","isLoggedin","setIsLoggedin","user","setUser","userPermissions","setUserPermissions","setUserInfos","ALTERA_MOBILE","split","LogIn","LogOut"],"sources":["C:/React N/SmartMobile/src/app/screens/context/authentication.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nexport const AuthenticationContext = createContext()\r\n\r\nexport const AuthenticationProvider = ({ children }) => {\r\n\r\n  const [isLoggedin, setIsLoggedin] = useState(false);\r\n  const [user, setUser] = useState({});\r\n  const [userPermissions, setUserPermissions] = useState([]);\r\n\r\n  const setUserInfos = (user) => {\r\n\r\n    setUser(user)\r\n    setUserPermissions(user.ALTERA_MOBILE.split(\",\"))\r\n\r\n    }\r\n\r\n  const LogIn = (user) => {\r\n\r\n    setUser(user)    \r\n    setUserPermissions(user.ALTERA_MOBILE.split(\",\"))\r\n    setIsLoggedin(true)\r\n\r\n    }\r\n\r\n    const LogOut = () => {\r\n\r\n      setUser({})\r\n      setUserPermissions([])\r\n      setIsLoggedin(false)\r\n    \r\n        }\r\n\r\n\r\n  return (\r\n    <AuthenticationContext.Provider \r\n    value={{ isLoggedin, user, userPermissions, LogIn, LogOut, setUserInfos }}>\r\n      {children}\r\n    </AuthenticationContext.Provider>\r\n  )\r\n\r\n\r\n}\r\n\r\n"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,OAAO,IAAMC,qBAAqB,GAAGF,aAAa,EAA3C;AAEP,OAAO,IAAMG,sBAAsB,GAAG,SAAzBA,sBAAyB,OAAkB;EAAA,IAAfC,QAAe,QAAfA,QAAe;;EAEtD,gBAAoCH,QAAQ,CAAC,KAAD,CAA5C;EAAA;EAAA,IAAOI,UAAP;EAAA,IAAmBC,aAAnB;;EACA,iBAAwBL,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOM,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAA8CP,QAAQ,CAAC,EAAD,CAAtD;EAAA;EAAA,IAAOQ,eAAP;EAAA,IAAwBC,kBAAxB;;EAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACJ,IAAD,EAAU;IAE7BC,OAAO,CAACD,IAAD,CAAP;IACAG,kBAAkB,CAACH,IAAI,CAACK,aAAL,CAAmBC,KAAnB,CAAyB,GAAzB,CAAD,CAAlB;EAEC,CALH;;EAOA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACP,IAAD,EAAU;IAEtBC,OAAO,CAACD,IAAD,CAAP;IACAG,kBAAkB,CAACH,IAAI,CAACK,aAAL,CAAmBC,KAAnB,CAAyB,GAAzB,CAAD,CAAlB;IACAP,aAAa,CAAC,IAAD,CAAb;EAEC,CANH;;EAQE,IAAMS,MAAM,GAAG,SAATA,MAAS,GAAM;IAEnBP,OAAO,CAAC,EAAD,CAAP;IACAE,kBAAkB,CAAC,EAAD,CAAlB;IACAJ,aAAa,CAAC,KAAD,CAAb;EAEG,CANL;;EASF,OACE,KAAC,qBAAD,CAAuB,QAAvB;IACA,KAAK,EAAE;MAAED,UAAU,EAAVA,UAAF;MAAcE,IAAI,EAAJA,IAAd;MAAoBE,eAAe,EAAfA,eAApB;MAAqCK,KAAK,EAALA,KAArC;MAA4CC,MAAM,EAANA,MAA5C;MAAoDJ,YAAY,EAAZA;IAApD,CADP;IAAA,UAEGP;EAFH,EADF;AAQD,CAtCM"},"metadata":{},"sourceType":"module"}