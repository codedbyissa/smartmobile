{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport { MockPersonList } from \"../FakerMocks\";\nimport Pagination from 'react-native-pagination';\nimport ContactItem from \"./widgets/ContactItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar VerticalBasicFlatList = function (_Component) {\n  _inherits(VerticalBasicFlatList, _Component);\n\n  var _super = _createSuper(VerticalBasicFlatList);\n\n  function VerticalBasicFlatList() {\n    var _this;\n\n    _classCallCheck(this, VerticalBasicFlatList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      items: MockPersonList,\n      selected: new Map()\n    };\n\n    _this._keyExtractor = function (item, index) {\n      return item.id.toString();\n    };\n\n    _this._onPressItem = function (id) {\n      _this.setState(function (state) {\n        var selected = new Map(state.selected);\n        selected.set(id, !selected.get(id));\n        return {\n          selected: selected\n        };\n      });\n    };\n\n    _this._renderItem = function (_ref) {\n      var item = _ref.item;\n      return _jsx(ContactItem, {\n        index: item.id,\n        id: item.key,\n        onPressItem: _this._onPressItem,\n        name: item.name,\n        avatar: item.avatar,\n        description: item.email,\n        tag: item.group,\n        createTagColor: true\n      });\n    };\n\n    _this._renderIteme = function (_ref2) {\n      var item = _ref2.item,\n          separators = _ref2.separators;\n      console.log(' item: ', item);\n      return _jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          return _this._onPress(item);\n        },\n        onShowUnderlay: separators.highlight,\n        onHideUnderlay: separators.unhighlight,\n        children: _jsx(View, {\n          style: {\n            backgroundColor: 'white'\n          },\n          children: _jsx(Text, {\n            children: item.title\n          })\n        })\n      });\n    };\n\n    _this.onViewableItemsChanged = function (_ref3) {\n      var viewableItems = _ref3.viewableItems,\n          changed = _ref3.changed;\n\n      _this.setState({\n        viewableItems: viewableItems,\n        changed: changed\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(VerticalBasicFlatList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var heading = 'Contacts',\n          subheading = 'Flat List Vertical Example';\n\n      var ListHeaderComponent = _jsxs(View, {\n        style: [{\n          padding: 10\n        }, s.containerMarginTop],\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 35,\n            color: '#444',\n            margin: 5,\n            fontWeight: '700'\n          },\n          children: heading ? heading : 'Heading'\n        }), _jsx(Text, {\n          style: {\n            fontSize: 17,\n            color: '#444',\n            margin: 5,\n            fontWeight: '400'\n          },\n          children: subheading\n        }), _jsx(View, {\n          style: {\n            width: 50,\n            borderBottomWidth: 1,\n            borderColor: '#e3e3e3',\n            margin: 5,\n            marginTop: 5,\n            marginBottom: 30\n          }\n        })]\n      });\n\n      return _jsxs(View, {\n        style: [s.container],\n        children: [_jsx(FlatList, {\n          ref: function ref(r) {\n            return _this2.refs = r;\n          },\n          data: this.state.items,\n          keyExtractor: this._keyExtractor,\n          onViewableItemsChanged: this.onViewableItemsChanged,\n          renderItem: this._renderItem\n        }), _jsx(Pagination, {\n          dotThemeLight: true,\n          dotSwapAxis: true,\n          dotIconFamily: \"FontAwesome\",\n          dotIconHame: \"FontAwesome\",\n          dotStyle: {\n            marginRight: 10\n          },\n          dotEmptyHide: true,\n          dotIconHide: true,\n          listRef: this.refs,\n          paginationVisibleItems: this.state.viewableItems,\n          paginationItems: this.state.items,\n          paginationItemPadSize: 3\n        })]\n      });\n    }\n  }]);\n\n  return VerticalBasicFlatList;\n}(Component);\n\nexport { VerticalBasicFlatList as default };\nvar s = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1a2530'\n  },\n  pagination: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    width: width,\n    position: 'absolute',\n    right: 0,\n    left: 0,\n    bottom: 7,\n    padding: 0,\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  containerMarginTop: {\n    marginTop: 30\n  }\n});\nVerticalBasicFlatList.defaultProps = {\n  data: MockPersonList\n};","map":{"version":3,"names":["React","Component","Dimensions","get","width","height","_","PropTypes","MockPersonList","Pagination","ContactItem","VerticalBasicFlatList","state","items","selected","Map","_keyExtractor","item","index","id","toString","_onPressItem","setState","set","_renderItem","key","name","avatar","email","group","_renderIteme","separators","console","log","_onPress","highlight","unhighlight","backgroundColor","title","onViewableItemsChanged","viewableItems","changed","heading","subheading","ListHeaderComponent","padding","s","containerMarginTop","fontSize","color","margin","fontWeight","borderBottomWidth","borderColor","marginTop","marginBottom","container","r","refs","marginRight","StyleSheet","create","flex","pagination","position","right","left","bottom","justifyContent","alignItems","flexDirection","defaultProps","data"],"sources":["C:/React N/SmartMobile/src/app/screens/vendas/atendimento.js"],"sourcesContent":["/* @flow */\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Dimensions,\r\n  FlatList,\r\n  Image,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableHighlight,\r\n  TouchableOpacity,\r\n  View\r\n} from 'react-native';\r\nconst { width, height } = Dimensions.get('window');\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport { MockPersonList } from '../FakerMocks';\r\nimport Pagination from 'react-native-pagination';\r\nimport ContactItem from './widgets/ContactItem';\r\nexport default class VerticalBasicFlatList extends Component {\r\n  state = {\r\n    items: MockPersonList,\r\n    selected: new Map()\r\n  };\r\n  _keyExtractor = (item, index) => item.id.toString();\r\n  _onPressItem = (id) => {\r\n    // Updater functions are preferred for transactional updates\r\n    this.setState(state => {\r\n      // Copy the map rather than modifying state.\r\n      const selected = new Map(state.selected);\r\n      selected.set(id, !selected.get(id)); // Toggle\r\n      return { selected };\r\n    });\r\n  };\r\n  _renderItem = ({ item }) => (\r\n    // console.log(\" item: \",item);\r\n    <ContactItem\r\n      index={item.id}\r\n      id={item.key}\r\n      onPressItem={this._onPressItem}\r\n      //  selected={!!this.state.selected.get(item.id)}\r\n      name={item.name}\r\n      avatar={item.avatar}\r\n      description={item.email}\r\n      tag={item.group}\r\n      createTagColor\r\n    />\r\n  );\r\n  _renderIteme = ({ item, separators }) => {\r\n    console.log(' item: ', item);\r\n    return (\r\n      <TouchableHighlight\r\n        onPress={() => this._onPress(item)}\r\n        onShowUnderlay={separators.highlight}\r\n        onHideUnderlay={separators.unhighlight}\r\n      >\r\n        <View style={{ backgroundColor: 'white' }}>\r\n          <Text>{item.title}</Text>\r\n        </View>\r\n      </TouchableHighlight>\r\n    );\r\n  };\r\n  // need this\r\n  onViewableItemsChanged = ({ viewableItems, changed }) => {\r\n    this.setState({ viewableItems, changed });\r\n  };\r\n  render() {\r\n    let heading = 'Contacts',\r\n      subheading = 'Flat List Vertical Example';\r\n    let ListHeaderComponent = (\r\n      <View style={[{ padding: 10 }, s.containerMarginTop]}>\r\n        <Text\r\n          style={{ fontSize: 35, color: '#444', margin: 5, fontWeight: '700' }}\r\n        >\r\n          {heading ? heading : 'Heading'}\r\n        </Text>\r\n        <Text\r\n          style={{ fontSize: 17, color: '#444', margin: 5, fontWeight: '400' }}\r\n        >\r\n          {subheading}\r\n        </Text>\r\n        <View\r\n          style={{\r\n            width: 50,\r\n            borderBottomWidth: 1,\r\n            borderColor: '#e3e3e3',\r\n            margin: 5,\r\n            marginTop: 5,\r\n            marginBottom: 30\r\n          }}\r\n        />\r\n      </View>\r\n    );\r\n    return (\r\n      <View style={[s.container]}>\r\n        <FlatList\r\n          ref={r => (this.refs = r)}\r\n          data={this.state.items}\r\n          keyExtractor={this._keyExtractor} // map your keys to whatever unique ids the have (mine is a \"key\" proptery)\r\n          onViewableItemsChanged={this.onViewableItemsChanged}\r\n          renderItem={this._renderItem}\r\n        />\r\n        <Pagination\r\n          // Horizontal\r\n          dotThemeLight\r\n          dotSwapAxis\r\n          dotIconFamily=\"FontAwesome\"\r\n          dotIconHame=\"FontAwesome\"\r\n          // DotPositionSwap\r\n          dotStyle={{ marginRight: 10 }}\r\n          dotEmptyHide\r\n          dotIconHide\r\n          listRef={this.refs} // to allow React Native Pagination to scroll to item when clicked  (so add \"ref={r=>this.refs=r}\" to your list)\r\n          paginationVisibleItems={this.state.viewableItems} // needs to track what the user sees\r\n          paginationItems={this.state.items} // pass the same list as data\r\n          paginationItemPadSize={3} // num of items to pad above and bellow your visable items\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\nconst s = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#1a2530'\r\n  },\r\n  pagination: {\r\n    backgroundColor: 'rgba(0,0,0,0)',\r\n    width,\r\n    position: 'absolute',\r\n    right: 0,\r\n    left: 0,\r\n    bottom: 7,\r\n    padding: 0,\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'row'\r\n  },\r\n  containerMarginTop: {\r\n    marginTop: 30\r\n  }\r\n});\r\nVerticalBasicFlatList.defaultProps = {\r\n  data: MockPersonList\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}