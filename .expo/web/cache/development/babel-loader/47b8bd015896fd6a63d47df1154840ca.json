{"ast":null,"code":"import * as React from 'react';\nimport NavigationBuilderContext from \"./NavigationBuilderContext\";\nimport NavigationStateContext from \"./NavigationStateContext\";\nexport default function useOptionsGetters(_ref) {\n  var key = _ref.key,\n      options = _ref.options,\n      navigation = _ref.navigation;\n  var optionsRef = React.useRef(options);\n  var optionsGettersFromChildRef = React.useRef({});\n\n  var _React$useContext = React.useContext(NavigationBuilderContext),\n      onOptionsChange = _React$useContext.onOptionsChange;\n\n  var _React$useContext2 = React.useContext(NavigationStateContext),\n      parentAddOptionsGetter = _React$useContext2.addOptionsGetter;\n\n  var optionsChangeListener = React.useCallback(function () {\n    var _navigation$isFocused;\n\n    var isFocused = (_navigation$isFocused = navigation === null || navigation === void 0 ? void 0 : navigation.isFocused()) !== null && _navigation$isFocused !== void 0 ? _navigation$isFocused : true;\n    var hasChildren = Object.keys(optionsGettersFromChildRef.current).length;\n\n    if (isFocused && !hasChildren) {\n      var _optionsRef$current;\n\n      onOptionsChange((_optionsRef$current = optionsRef.current) !== null && _optionsRef$current !== void 0 ? _optionsRef$current : {});\n    }\n  }, [navigation, onOptionsChange]);\n  React.useEffect(function () {\n    optionsRef.current = options;\n    optionsChangeListener();\n    return navigation === null || navigation === void 0 ? void 0 : navigation.addListener('focus', optionsChangeListener);\n  }, [navigation, options, optionsChangeListener]);\n  var getOptionsFromListener = React.useCallback(function () {\n    for (var _key in optionsGettersFromChildRef.current) {\n      if (optionsGettersFromChildRef.current.hasOwnProperty(_key)) {\n        var _optionsGettersFromCh, _optionsGettersFromCh2;\n\n        var result = (_optionsGettersFromCh = (_optionsGettersFromCh2 = optionsGettersFromChildRef.current)[_key]) === null || _optionsGettersFromCh === void 0 ? void 0 : _optionsGettersFromCh.call(_optionsGettersFromCh2);\n\n        if (result !== null) {\n          return result;\n        }\n      }\n    }\n\n    return null;\n  }, []);\n  var getCurrentOptions = React.useCallback(function () {\n    var _navigation$isFocused2;\n\n    var isFocused = (_navigation$isFocused2 = navigation === null || navigation === void 0 ? void 0 : navigation.isFocused()) !== null && _navigation$isFocused2 !== void 0 ? _navigation$isFocused2 : true;\n\n    if (!isFocused) {\n      return null;\n    }\n\n    var optionsFromListener = getOptionsFromListener();\n\n    if (optionsFromListener !== null) {\n      return optionsFromListener;\n    }\n\n    return optionsRef.current;\n  }, [navigation, getOptionsFromListener]);\n  React.useEffect(function () {\n    return parentAddOptionsGetter === null || parentAddOptionsGetter === void 0 ? void 0 : parentAddOptionsGetter(key, getCurrentOptions);\n  }, [getCurrentOptions, parentAddOptionsGetter, key]);\n  var addOptionsGetter = React.useCallback(function (key, getter) {\n    optionsGettersFromChildRef.current[key] = getter;\n    optionsChangeListener();\n    return function () {\n      delete optionsGettersFromChildRef.current[key];\n      optionsChangeListener();\n    };\n  }, [optionsChangeListener]);\n  return {\n    addOptionsGetter: addOptionsGetter,\n    getCurrentOptions: getCurrentOptions\n  };\n}","map":{"version":3,"sources":["useOptionsGetters.tsx"],"names":["navigation","optionsRef","React","optionsGettersFromChildRef","onOptionsChange","addOptionsGetter","parentAddOptionsGetter","optionsChangeListener","isFocused","hasChildren","Object","getOptionsFromListener","result","getCurrentOptions","optionsFromListener"],"mappings":"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","sourcesContent":["import type { ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport type { NavigationProp } from './types';\n\ntype Options = {\n  key?: string;\n  navigation?: NavigationProp<ParamListBase>;\n  options?: object | undefined;\n};\n\nexport default function useOptionsGetters({\n  key,\n  options,\n  navigation,\n}: Options) {\n  const optionsRef = React.useRef<object | undefined>(options);\n  const optionsGettersFromChildRef = React.useRef<\n    Record<string, () => object | undefined | null>\n  >({});\n\n  const { onOptionsChange } = React.useContext(NavigationBuilderContext);\n  const { addOptionsGetter: parentAddOptionsGetter } = React.useContext(\n    NavigationStateContext\n  );\n\n  const optionsChangeListener = React.useCallback(() => {\n    const isFocused = navigation?.isFocused() ?? true;\n    const hasChildren = Object.keys(optionsGettersFromChildRef.current).length;\n\n    if (isFocused && !hasChildren) {\n      onOptionsChange(optionsRef.current ?? {});\n    }\n  }, [navigation, onOptionsChange]);\n\n  React.useEffect(() => {\n    optionsRef.current = options;\n    optionsChangeListener();\n\n    return navigation?.addListener('focus', optionsChangeListener);\n  }, [navigation, options, optionsChangeListener]);\n\n  const getOptionsFromListener = React.useCallback(() => {\n    for (let key in optionsGettersFromChildRef.current) {\n      if (optionsGettersFromChildRef.current.hasOwnProperty(key)) {\n        const result = optionsGettersFromChildRef.current[key]?.();\n\n        // null means unfocused route\n        if (result !== null) {\n          return result;\n        }\n      }\n    }\n\n    return null;\n  }, []);\n\n  const getCurrentOptions = React.useCallback(() => {\n    const isFocused = navigation?.isFocused() ?? true;\n\n    if (!isFocused) {\n      return null;\n    }\n\n    const optionsFromListener = getOptionsFromListener();\n\n    if (optionsFromListener !== null) {\n      return optionsFromListener;\n    }\n\n    return optionsRef.current;\n  }, [navigation, getOptionsFromListener]);\n\n  React.useEffect(() => {\n    return parentAddOptionsGetter?.(key!, getCurrentOptions);\n  }, [getCurrentOptions, parentAddOptionsGetter, key]);\n\n  const addOptionsGetter = React.useCallback(\n    (key: string, getter: () => object | undefined | null) => {\n      optionsGettersFromChildRef.current[key] = getter;\n      optionsChangeListener();\n\n      return () => {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete optionsGettersFromChildRef.current[key];\n        optionsChangeListener();\n      };\n    },\n    [optionsChangeListener]\n  );\n\n  return {\n    addOptionsGetter,\n    getCurrentOptions,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}