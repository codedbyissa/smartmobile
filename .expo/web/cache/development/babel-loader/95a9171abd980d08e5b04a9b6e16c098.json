{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"tintColor\", \"style\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport default function HeaderTitle(_ref) {\n  var tintColor = _ref.tintColor,\n      style = _ref.style,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  return React.createElement(Animated.Text, _extends({\n    accessibilityRole: \"header\",\n    \"aria-level\": \"1\",\n    numberOfLines: 1\n  }, rest, {\n    style: [styles.title, {\n      color: tintColor === undefined ? colors.text : tintColor\n    }, style]\n  }));\n}\nvar styles = StyleSheet.create({\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600'\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal'\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500'\n    }\n  })\n});","map":{"version":3,"sources":["HeaderTitle.tsx"],"names":["rest","colors","useTheme","styles","color","tintColor","title","ios","fontSize","fontWeight","android","fontFamily","default"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,QAAA,QAAA,0BAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;;;;AAgBA,eAAe,SAAA,WAAA,CAAA,IAAA,EAA2D;EAAtC,IAAA,SAAA,GAAsC,IAAtC,CAAA,SAAA;EAAA,IAAA,KAAA,GAAsC,IAAtC,CAAA,KAAA;EAAA,IAAuBA,IAAvB,4BAAsC,IAAtC;;EAClC,gBAAmBE,QAAnB,EAAA;EAAA,IAAQD,MAAR,aAAQA,MAAR;;EAEA,OACE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA,QAAA,CAAA;IACE,iBAAiB,EADnB,QAAA;IAEE,cAFF,GAAA;IAGE,aAAa,EAAE;EAHjB,CAAA,EAAA,IAAA,EAAA;IAKE,KAAK,EAAE,CACLE,MAAM,CADD,KAAA,EAEL;MAAEC,KAAK,EAAEC,SAAS,KAATA,SAAAA,GAA0BJ,MAAM,CAAhCI,IAAAA,GAAwCA;IAAjD,CAFK,EAAA,KAAA;EALT,CAAA,CAAA,CADF;AAaD;AAED,IAAMF,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;EAC/BG,KAAK,EAAE,QAAQ,CAAR,MAAA,CAAgB;IACrBC,GAAG,EAAE;MACHC,QAAQ,EADL,EAAA;MAEHC,UAAU,EAAE;IAFT,CADgB;IAKrBC,OAAO,EAAE;MACPF,QAAQ,EADD,EAAA;MAEPG,UAAU,EAFH,mBAAA;MAGPF,UAAU,EAAE;IAHL,CALY;IAUrBG,OAAO,EAAE;MACPJ,QAAQ,EADD,EAAA;MAEPC,UAAU,EAAE;IAFL;EAVY,CAAhB;AADwB,CAAlB,CAAf","sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextProps,\n  TextStyle,\n} from 'react-native';\n\ntype Props = Omit<TextProps, 'style'> & {\n  tintColor?: string;\n  children?: string;\n  style?: Animated.WithAnimatedValue<StyleProp<TextStyle>>;\n};\n\nexport default function HeaderTitle({ tintColor, style, ...rest }: Props) {\n  const { colors } = useTheme();\n\n  return (\n    <Animated.Text\n      accessibilityRole=\"header\"\n      aria-level=\"1\"\n      numberOfLines={1}\n      {...rest}\n      style={[\n        styles.title,\n        { color: tintColor === undefined ? colors.text : tintColor },\n        style,\n      ]}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600',\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal',\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500',\n    },\n  }),\n});\n"]},"metadata":{},"sourceType":"module"}