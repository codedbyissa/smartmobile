{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar fontConfig = {\n  web: {\n    regular: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '400'\n    },\n    medium: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '500'\n    },\n    light: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '300'\n    },\n    thin: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '100'\n    }\n  },\n  ios: {\n    regular: {\n      fontFamily: 'System',\n      fontWeight: '400'\n    },\n    medium: {\n      fontFamily: 'System',\n      fontWeight: '500'\n    },\n    light: {\n      fontFamily: 'System',\n      fontWeight: '300'\n    },\n    thin: {\n      fontFamily: 'System',\n      fontWeight: '100'\n    }\n  },\n  default: {\n    regular: {\n      fontFamily: 'sans-serif',\n      fontWeight: 'normal'\n    },\n    medium: {\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal'\n    },\n    light: {\n      fontFamily: 'sans-serif-light',\n      fontWeight: 'normal'\n    },\n    thin: {\n      fontFamily: 'sans-serif-thin',\n      fontWeight: 'normal'\n    }\n  }\n};\nexport default function configureFonts(config) {\n  var fonts = Platform.select(_objectSpread(_objectSpread({}, fontConfig), config));\n  return fonts;\n}","map":{"version":3,"sources":["fonts.tsx"],"names":["fontConfig","web","regular","fontFamily","fontWeight","medium","light","thin","ios","default","fonts","config"],"mappings":";;;;;;;AAGA,IAAMA,UAAU,GAAG;EACjBC,GAAG,EAAE;IACHC,OAAO,EAAE;MACPC,UAAU,EADH,wDAAA;MAEPC,UAAU,EAAE;IAFL,CADN;IAKHC,MAAM,EAAE;MACNF,UAAU,EADJ,wDAAA;MAENC,UAAU,EAAE;IAFN,CALL;IASHE,KAAK,EAAE;MACLH,UAAU,EADL,wDAAA;MAELC,UAAU,EAAE;IAFP,CATJ;IAaHG,IAAI,EAAE;MACJJ,UAAU,EADN,wDAAA;MAEJC,UAAU,EAAE;IAFR;EAbH,CADY;EAmBjBI,GAAG,EAAE;IACHN,OAAO,EAAE;MACPC,UAAU,EADH,QAAA;MAEPC,UAAU,EAAE;IAFL,CADN;IAKHC,MAAM,EAAE;MACNF,UAAU,EADJ,QAAA;MAENC,UAAU,EAAE;IAFN,CALL;IASHE,KAAK,EAAE;MACLH,UAAU,EADL,QAAA;MAELC,UAAU,EAAE;IAFP,CATJ;IAaHG,IAAI,EAAE;MACJJ,UAAU,EADN,QAAA;MAEJC,UAAU,EAAE;IAFR;EAbH,CAnBY;EAqCjBK,OAAO,EAAE;IACPP,OAAO,EAAE;MACPC,UAAU,EADH,YAAA;MAEPC,UAAU,EAAE;IAFL,CADF;IAKPC,MAAM,EAAE;MACNF,UAAU,EADJ,mBAAA;MAENC,UAAU,EAAE;IAFN,CALD;IASPE,KAAK,EAAE;MACLH,UAAU,EADL,kBAAA;MAELC,UAAU,EAAE;IAFP,CATA;IAaPG,IAAI,EAAE;MACJJ,UAAU,EADN,iBAAA;MAEJC,UAAU,EAAE;IAFR;EAbC;AArCQ,CAAnB;AAyDA,eAAe,SAAA,cAAA,CAAA,MAAA,EAEL;EACR,IAAMM,KAAK,GAAG,QAAQ,CAAR,MAAA,iCAAgB,UAAhB,GAAoCC,MAApC,EAAd;EACA,OAAA,KAAA;AACD","sourcesContent":["import { Platform, PlatformOSType } from 'react-native';\nimport type { Fonts } from '../types';\n\nconst fontConfig = {\n  web: {\n    regular: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '400' as '400',\n    },\n    medium: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '500' as '500',\n    },\n    light: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '300' as '300',\n    },\n    thin: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '100' as '100',\n    },\n  },\n  ios: {\n    regular: {\n      fontFamily: 'System',\n      fontWeight: '400' as '400',\n    },\n    medium: {\n      fontFamily: 'System',\n      fontWeight: '500' as '500',\n    },\n    light: {\n      fontFamily: 'System',\n      fontWeight: '300' as '300',\n    },\n    thin: {\n      fontFamily: 'System',\n      fontWeight: '100' as '100',\n    },\n  },\n  default: {\n    regular: {\n      fontFamily: 'sans-serif',\n      fontWeight: 'normal' as 'normal',\n    },\n    medium: {\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal' as 'normal',\n    },\n    light: {\n      fontFamily: 'sans-serif-light',\n      fontWeight: 'normal' as 'normal',\n    },\n    thin: {\n      fontFamily: 'sans-serif-thin',\n      fontWeight: 'normal' as 'normal',\n    },\n  },\n};\n\nexport default function configureFonts(config?: {\n  [platform in PlatformOSType | 'default']?: Fonts;\n}): Fonts {\n  const fonts = Platform.select({ ...fontConfig, ...config }) as Fonts;\n  return fonts;\n}\n"]},"metadata":{},"sourceType":"module"}