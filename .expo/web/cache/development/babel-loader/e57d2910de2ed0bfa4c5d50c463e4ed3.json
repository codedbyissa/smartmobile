{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport RNDrawerLayoutAndroid from \"react-native-web/dist/exports/DrawerLayoutAndroid\";\nimport RNFlatList from \"react-native-web/dist/exports/FlatList\";\nimport RNSwitch from \"react-native-web/dist/exports/Switch\";\nimport RNTextInput from \"react-native-web/dist/exports/TextInput\";\nimport RNScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport createNativeWrapper from \"../handlers/createNativeWrapper\";\nexport var ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: true\n});\nexport var Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true\n});\nexport var TextInput = createNativeWrapper(RNTextInput);\nexport var DrawerLayoutAndroid = createNativeWrapper(RNDrawerLayoutAndroid, {\n  disallowInterruption: true\n});\nDrawerLayoutAndroid.positions = RNDrawerLayoutAndroid.positions;\nexport var FlatList = React.forwardRef(function (props, ref) {\n  return React.createElement(RNFlatList, _extends({\n    ref: ref\n  }, props, {\n    renderScrollComponent: function renderScrollComponent(scrollProps) {\n      return React.createElement(ScrollView, scrollProps);\n    }\n  }));\n});","map":{"version":3,"sources":["GestureComponents.web.tsx"],"names":["ScrollView","createNativeWrapper","disallowInterruption","Switch","shouldCancelWhenOutside","shouldActivateOnStart","TextInput","DrawerLayoutAndroid","RNDrawerLayoutAndroid","FlatList","ref","scrollProps"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;;;;AAUA,OAAA,mBAAA;AAEA,OAAO,IAAMA,UAAU,GAAGC,mBAAmB,CAAA,YAAA,EAAe;EAC1DC,oBAAoB,EAAE;AADoC,CAAf,CAAtC;AAIP,OAAO,IAAMC,MAAM,GAAGF,mBAAmB,CAAA,QAAA,EAAW;EAClDG,uBAAuB,EAD2B,KAAA;EAElDC,qBAAqB,EAF6B,IAAA;EAGlDH,oBAAoB,EAAE;AAH4B,CAAX,CAAlC;AAKP,OAAO,IAAMI,SAAS,GAAGL,mBAAmB,CAArC,WAAqC,CAArC;AACP,OAAO,IAAMM,mBAAmB,GAAGN,mBAAmB,CAAA,qBAAA,EAAwB;EAC5EC,oBAAoB,EAAE;AADsD,CAAxB,CAA/C;AAIPK,mBAAmB,CAAnBA,SAAAA,GAAgCC,qBAAqB,CAArDD,SAAAA;AAEA,OAAO,IAAME,QAAQ,GAAG,KAAK,CAAL,UAAA,CACtB,UAAA,KAAA,EAAA,GAAA;EAAA,OACE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,QAAA,CAAA;IACE,GAAG,EAAEC;EADP,CAAA,EAAA,KAAA,EAAA;IAGE,qBAAqB,EAAGC,+BAAAA,WAAD;MAAA,OAAiB,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,WAAA,CAAjB;IAAA;EAHzB,CAAA,CAAA,CADF;AAAA,CADsB,CAAjB","sourcesContent":["import * as React from 'react';\nimport {\n  DrawerLayoutAndroid as RNDrawerLayoutAndroid,\n  FlatList as RNFlatList,\n  Switch as RNSwitch,\n  TextInput as RNTextInput,\n  ScrollView as RNScrollView,\n  FlatListProps,\n} from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\n\nexport const ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: true,\n});\n\nexport const Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nexport const TextInput = createNativeWrapper(RNTextInput);\nexport const DrawerLayoutAndroid = createNativeWrapper(RNDrawerLayoutAndroid, {\n  disallowInterruption: true,\n});\n// @ts-ignore -- TODO(TS) to investigate if it's needed\nDrawerLayoutAndroid.positions = RNDrawerLayoutAndroid.positions;\n\nexport const FlatList = React.forwardRef(\n  <ItemT extends any>(props: FlatListProps<ItemT>, ref: any) => (\n    <RNFlatList\n      ref={ref}\n      {...props}\n      renderScrollComponent={(scrollProps) => <ScrollView {...scrollProps} />}\n    />\n  )\n);\n"]},"metadata":{},"sourceType":"module"}