{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Scanner(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scanned = _useState4[0],\n      setScanned = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());\n\n            case 2:\n              _await$BarCodeScanner = _context.sent;\n              status = _await$BarCodeScanner.status;\n              setHasPermission(status === \"granted\");\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref) {\n    var type = _ref.type,\n        data = _ref.data;\n    setScanned(true);\n    props.onCodeScanned(type, data);\n  };\n\n  if (hasPermission === null) {\n    return _jsx(Text, {\n      children: \"Solicitando permiss\\xE3o da c\\xE2mera\"\n    });\n  }\n\n  if (hasPermission === false) {\n    return _jsx(Text, {\n      children: \"Sem acesso \\xE0 c\\xE2mera\"\n    });\n  }\n\n  return _jsxs(View, {\n    style: {\n      width: \"100%\",\n      height: \"90%\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-end\"\n    },\n    children: [_jsx(BarCodeScanner, {\n      onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n      style: StyleSheet.absoluteFillObject\n    }), scanned && _jsx(Button, {\n      title: \"Repetir Escaneamento\",\n      onPress: function onPress() {\n        return setScanned(false);\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","BarCodeScanner","Scanner","props","hasPermission","setHasPermission","scanned","setScanned","requestPermissionsAsync","status","handleBarCodeScanned","type","data","onCodeScanned","width","height","flexDirection","justifyContent","undefined","StyleSheet","absoluteFillObject"],"sources":["C:/React N/SmartMobile/src/app/screens/preco/scanner.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Text, View, StyleSheet, Button } from \"react-native\";\r\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\r\n\r\nexport default function Scanner(props) {\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const [scanned, setScanned] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\r\n      setHasPermission(status === \"granted\");\r\n    })();\r\n  }, []);\r\n\r\n  const handleBarCodeScanned = ({ type, data }) => {\r\n    setScanned(true);\r\n    props.onCodeScanned(type, data);\r\n  };\r\n\r\n  if (hasPermission === null) {\r\n    return <Text>Solicitando permissão da câmera</Text>;\r\n  }\r\n  if (hasPermission === false) {\r\n    return <Text>Sem acesso à câmera</Text>;\r\n  }\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"90%\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"flex-end\",\r\n      }}\r\n    >\r\n      <BarCodeScanner\r\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n        style={StyleSheet.absoluteFillObject}\r\n      />\r\n\r\n      {scanned && (\r\n        <Button\r\n          title={\"Repetir Escaneamento\"}\r\n          onPress={() => setScanned(false)}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,cAAT,QAA+B,sBAA/B;;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EACrC,gBAA0CJ,QAAQ,CAAC,IAAD,CAAlD;EAAA;EAAA,IAAOK,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,iBAA8BN,QAAQ,CAAC,KAAD,CAAtC;EAAA;EAAA,IAAOO,OAAP;EAAA,IAAgBC,UAAhB;;EAEAP,SAAS,CAAC,YAAM;IACd,CAAC;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCAC0BC,cAAc,CAACO,uBAAf,EAD1B;;YAAA;cAAA;cACSC,MADT,yBACSA,MADT;cAECJ,gBAAgB,CAACI,MAAM,KAAK,SAAZ,CAAhB;;YAFD;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAD;EAID,CALQ,EAKN,EALM,CAAT;;EAOA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAoB;IAAA,IAAjBC,IAAiB,QAAjBA,IAAiB;IAAA,IAAXC,IAAW,QAAXA,IAAW;IAC/CL,UAAU,CAAC,IAAD,CAAV;IACAJ,KAAK,CAACU,aAAN,CAAoBF,IAApB,EAA0BC,IAA1B;EACD,CAHD;;EAKA,IAAIR,aAAa,KAAK,IAAtB,EAA4B;IAC1B,OAAO,KAAC,IAAD;MAAA;IAAA,EAAP;EACD;;EACD,IAAIA,aAAa,KAAK,KAAtB,EAA6B;IAC3B,OAAO,KAAC,IAAD;MAAA;IAAA,EAAP;EACD;;EAED,OACE,MAAC,IAAD;IACE,KAAK,EAAE;MACLU,KAAK,EAAE,MADF;MAELC,MAAM,EAAE,KAFH;MAGLC,aAAa,EAAE,QAHV;MAILC,cAAc,EAAE;IAJX,CADT;IAAA,WAQE,KAAC,cAAD;MACE,gBAAgB,EAAEX,OAAO,GAAGY,SAAH,GAAeR,oBAD1C;MAEE,KAAK,EAAES,UAAU,CAACC;IAFpB,EARF,EAaGd,OAAO,IACN,KAAC,MAAD;MACE,KAAK,EAAE,sBADT;MAEE,OAAO,EAAE;QAAA,OAAMC,UAAU,CAAC,KAAD,CAAhB;MAAA;IAFX,EAdJ;EAAA,EADF;AAsBD"},"metadata":{},"sourceType":"module"}