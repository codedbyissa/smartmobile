{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"index\", \"total\", \"siblings\", \"style\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar CardContent = function CardContent(_ref) {\n  var index = _ref.index,\n      total = _ref.total,\n      siblings = _ref.siblings,\n      style = _ref.style,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var cover = 'withTheme(CardCover)';\n  var title = 'withTheme(CardTitle)';\n  var contentStyle, prev, next;\n\n  if (typeof index === 'number' && siblings) {\n    prev = siblings[index - 1];\n    next = siblings[index + 1];\n  }\n\n  if (prev === cover && next === cover || prev === title && next === title || total === 1) {\n    contentStyle = styles.only;\n  } else if (index === 0) {\n    if (next === cover || next === title) {\n      contentStyle = styles.only;\n    } else {\n      contentStyle = styles.first;\n    }\n  } else if (typeof total === 'number' && index === total - 1) {\n    if (prev === cover || prev === title) {\n      contentStyle = styles.only;\n    } else {\n      contentStyle = styles.last;\n    }\n  } else if (prev === cover || prev === title) {\n    contentStyle = styles.first;\n  } else if (next === cover || next === title) {\n    contentStyle = styles.last;\n  }\n\n  return React.createElement(View, _extends({}, rest, {\n    style: [styles.container, contentStyle, style]\n  }));\n};\n\nCardContent.displayName = 'Card.Content';\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16\n  },\n  first: {\n    paddingTop: 16\n  },\n  last: {\n    paddingBottom: 16\n  },\n  only: {\n    paddingVertical: 16\n  }\n});\nexport default CardContent;","map":{"version":3,"sources":["CardContent.tsx"],"names":["CardContent","rest","cover","title","prev","siblings","index","next","total","contentStyle","styles","container","paddingHorizontal","first","paddingTop","last","paddingBottom","only","paddingVertical"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;;AAkDA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAA,IAAA,EAAuD;EAAtD,IAAA,KAAA,GAAsD,IAAtD,CAAA,KAAA;EAAA,IAAA,KAAA,GAAsD,IAAtD,CAAA,KAAA;EAAA,IAAA,QAAA,GAAsD,IAAtD,CAAA,QAAA;EAAA,IAAA,KAAA,GAAsD,IAAtD,CAAA,KAAA;EAAA,IAAoCC,IAApC,4BAAsD,IAAtD;;EACnB,IAAMC,KAAK,GAAX,sBAAA;EACA,IAAMC,KAAK,GAAX,sBAAA;EAEA,IAAA,YAAA,EAAA,IAAA,EAAA,IAAA;;EAEA,IAAI,OAAA,KAAA,KAAA,QAAA,IAAJ,QAAA,EAA2C;IACzCC,IAAI,GAAGC,QAAQ,CAACC,KAAK,GAArBF,CAAe,CAAfA;IACAG,IAAI,GAAGF,QAAQ,CAACC,KAAK,GAArBC,CAAe,CAAfA;EACD;;EAED,IACGH,IAAI,KAAJA,KAAAA,IAAkBG,IAAI,KAAvB,KAACH,IACAA,IAAI,KAAJA,KAAAA,IAAkBG,IAAI,KADvB,KAACH,IAEDI,KAAK,KAHP,CAAA,EAIE;IACAC,YAAY,GAAGC,MAAM,CAArBD,IAAAA;EALF,CAAA,MAMO,IAAIH,KAAK,KAAT,CAAA,EAAiB;IACtB,IAAIC,IAAI,KAAJA,KAAAA,IAAkBA,IAAI,KAA1B,KAAA,EAAsC;MACpCE,YAAY,GAAGC,MAAM,CAArBD,IAAAA;IADF,CAAA,MAEO;MACLA,YAAY,GAAGC,MAAM,CAArBD,KAAAA;IACD;EALI,CAAA,MAMA,IAAI,OAAA,KAAA,KAAA,QAAA,IAA6BH,KAAK,KAAKE,KAAK,GAAhD,CAAA,EAAsD;IAC3D,IAAIJ,IAAI,KAAJA,KAAAA,IAAkBA,IAAI,KAA1B,KAAA,EAAsC;MACpCK,YAAY,GAAGC,MAAM,CAArBD,IAAAA;IADF,CAAA,MAEO;MACLA,YAAY,GAAGC,MAAM,CAArBD,IAAAA;IACD;EALI,CAAA,MAMA,IAAIL,IAAI,KAAJA,KAAAA,IAAkBA,IAAI,KAA1B,KAAA,EAAsC;IAC3CK,YAAY,GAAGC,MAAM,CAArBD,KAAAA;EADK,CAAA,MAEA,IAAIF,IAAI,KAAJA,KAAAA,IAAkBA,IAAI,KAA1B,KAAA,EAAsC;IAC3CE,YAAY,GAAGC,MAAM,CAArBD,IAAAA;EACD;;EAED,OAAO,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;IAAgB,KAAK,EAAE,CAACC,MAAM,CAAP,SAAA,EAAA,YAAA,EAAA,KAAA;EAAvB,CAAA,CAAA,CAAP;AAnCF,CAAA;;AAsCAV,WAAW,CAAXA,WAAAA,GAAAA,cAAAA;AAEA,IAAMU,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;EAC/BC,SAAS,EAAE;IACTC,iBAAiB,EAAE;EADV,CADoB;EAI/BC,KAAK,EAAE;IACLC,UAAU,EAAE;EADP,CAJwB;EAO/BC,IAAI,EAAE;IACJC,aAAa,EAAE;EADX,CAPyB;EAU/BC,IAAI,EAAE;IACJC,eAAe,EAAE;EADb;AAVyB,CAAlB,CAAf;AAeA,eAAA,WAAA","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Items inside the `Card.Content`.\n   */\n  children: React.ReactNode;\n  /**\n   * @internal\n   */\n  index?: number;\n  /**\n   * @internal\n   */\n  total?: number;\n  /**\n   * @internal\n   */\n  siblings?: Array<string>;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show content inside a Card.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/card-content-example.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card, Title, Paragraph } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Content>\n *       <Title>Card title</Title>\n *       <Paragraph>Card content</Paragraph>\n *     </Card.Content>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst CardContent = ({ index, total, siblings, style, ...rest }: Props) => {\n  const cover = 'withTheme(CardCover)';\n  const title = 'withTheme(CardTitle)';\n\n  let contentStyle, prev, next;\n\n  if (typeof index === 'number' && siblings) {\n    prev = siblings[index - 1];\n    next = siblings[index + 1];\n  }\n\n  if (\n    (prev === cover && next === cover) ||\n    (prev === title && next === title) ||\n    total === 1\n  ) {\n    contentStyle = styles.only;\n  } else if (index === 0) {\n    if (next === cover || next === title) {\n      contentStyle = styles.only;\n    } else {\n      contentStyle = styles.first;\n    }\n  } else if (typeof total === 'number' && index === total - 1) {\n    if (prev === cover || prev === title) {\n      contentStyle = styles.only;\n    } else {\n      contentStyle = styles.last;\n    }\n  } else if (prev === cover || prev === title) {\n    contentStyle = styles.first;\n  } else if (next === cover || next === title) {\n    contentStyle = styles.last;\n  }\n\n  return <View {...rest} style={[styles.container, contentStyle, style]} />;\n};\n\nCardContent.displayName = 'Card.Content';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n  },\n  first: {\n    paddingTop: 16,\n  },\n  last: {\n    paddingBottom: 16,\n  },\n  only: {\n    paddingVertical: 16,\n  },\n});\n\nexport default CardContent;\n"]},"metadata":{},"sourceType":"module"}