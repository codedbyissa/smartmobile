{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nexport var getCombinedStyles = function getCombinedStyles(_ref) {\n  var isAnimatedFromRight = _ref.isAnimatedFromRight,\n      isIconStatic = _ref.isIconStatic,\n      distance = _ref.distance,\n      animFAB = _ref.animFAB;\n  var isRTL = I18nManager.isRTL;\n  var defaultPositionStyles = {\n    left: -distance,\n    right: undefined\n  };\n  var combinedStyles = {\n    innerWrapper: _objectSpread({}, defaultPositionStyles),\n    iconWrapper: _objectSpread({}, defaultPositionStyles),\n    absoluteFill: {}\n  };\n  var animatedFromRight = isAnimatedFromRight && !isRTL;\n  var animatedFromRightRTL = isAnimatedFromRight && isRTL;\n  var animatedFromLeft = !isAnimatedFromRight && !isRTL;\n  var animatedFromLeftRTL = !isAnimatedFromRight && isRTL;\n\n  if (animatedFromRight) {\n    combinedStyles.innerWrapper.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [distance, 0]\n      })\n    }];\n    combinedStyles.iconWrapper.transform = [{\n      translateX: isIconStatic ? 0 : animFAB\n    }];\n    combinedStyles.absoluteFill.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [Math.abs(distance) / 2, Math.abs(distance)]\n      })\n    }];\n  } else if (animatedFromRightRTL) {\n    combinedStyles.iconWrapper.transform = [{\n      translateX: isIconStatic ? 0 : animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [-distance, 0]\n      })\n    }];\n    combinedStyles.innerWrapper.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [-distance, 0]\n      })\n    }];\n    combinedStyles.absoluteFill.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [0, distance]\n      })\n    }];\n  } else if (animatedFromLeft) {\n    combinedStyles.iconWrapper.transform = [{\n      translateX: isIconStatic ? distance : animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [distance, distance * 2]\n      })\n    }];\n    combinedStyles.innerWrapper.transform = [{\n      translateX: animFAB\n    }];\n    combinedStyles.absoluteFill.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [0, Math.abs(distance) / 2]\n      })\n    }];\n  } else if (animatedFromLeftRTL) {\n    combinedStyles.iconWrapper.transform = [{\n      translateX: isIconStatic ? animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [-distance, -distance * 2]\n      }) : -distance\n    }];\n    combinedStyles.innerWrapper.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [0, -distance]\n      })\n    }];\n    combinedStyles.absoluteFill.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [0, -distance]\n      })\n    }];\n  }\n\n  return combinedStyles;\n};","map":{"version":3,"sources":["utils.ts"],"names":["getCombinedStyles","animFAB","isRTL","defaultPositionStyles","left","right","undefined","combinedStyles","innerWrapper","iconWrapper","absoluteFill","animatedFromRight","isAnimatedFromRight","animatedFromRightRTL","animatedFromLeft","animatedFromLeftRTL","translateX","inputRange","outputRange","isIconStatic","Math","distance"],"mappings":"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","sourcesContent":["import { Animated, I18nManager, ViewStyle } from 'react-native';\n\ntype GetCombinedStylesProps = {\n  isAnimatedFromRight: boolean;\n  isIconStatic: boolean;\n  distance: number;\n  animFAB: Animated.Value;\n};\n\ntype CombinedStyles = {\n  innerWrapper: Animated.WithAnimatedValue<ViewStyle>;\n  iconWrapper: Animated.WithAnimatedValue<ViewStyle>;\n  absoluteFill: Animated.WithAnimatedValue<ViewStyle>;\n};\n\nexport const getCombinedStyles = ({\n  isAnimatedFromRight,\n  isIconStatic,\n  distance,\n  animFAB,\n}: GetCombinedStylesProps): CombinedStyles => {\n  const { isRTL } = I18nManager;\n\n  const defaultPositionStyles = { left: -distance, right: undefined };\n\n  const combinedStyles: CombinedStyles = {\n    innerWrapper: {\n      ...defaultPositionStyles,\n    },\n    iconWrapper: {\n      ...defaultPositionStyles,\n    },\n    absoluteFill: {},\n  };\n\n  const animatedFromRight = isAnimatedFromRight && !isRTL;\n  const animatedFromRightRTL = isAnimatedFromRight && isRTL;\n  const animatedFromLeft = !isAnimatedFromRight && !isRTL;\n  const animatedFromLeftRTL = !isAnimatedFromRight && isRTL;\n\n  if (animatedFromRight) {\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [distance, 0],\n        }),\n      },\n    ];\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic ? 0 : animFAB,\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [Math.abs(distance) / 2, Math.abs(distance)],\n        }),\n      },\n    ];\n  } else if (animatedFromRightRTL) {\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic\n          ? 0\n          : animFAB.interpolate({\n              inputRange: [distance, 0],\n              outputRange: [-distance, 0],\n            }),\n      },\n    ];\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [-distance, 0],\n        }),\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [0, distance],\n        }),\n      },\n    ];\n  } else if (animatedFromLeft) {\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic\n          ? distance\n          : animFAB.interpolate({\n              inputRange: [0, distance],\n              outputRange: [distance, distance * 2],\n            }),\n      },\n    ];\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB,\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [0, distance],\n          outputRange: [0, Math.abs(distance) / 2],\n        }),\n      },\n    ];\n  } else if (animatedFromLeftRTL) {\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic\n          ? animFAB.interpolate({\n              inputRange: [0, distance],\n              outputRange: [-distance, -distance * 2],\n            })\n          : -distance,\n      },\n    ];\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [0, distance],\n          outputRange: [0, -distance],\n        }),\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [0, distance],\n          outputRange: [0, -distance],\n        }),\n      },\n    ];\n  }\n\n  return combinedStyles;\n};\n"]},"metadata":{},"sourceType":"module"}