{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nexport default function fromEntries(entries) {\n  return entries.reduce(function (acc, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        k = _ref2[0],\n        v = _ref2[1];\n\n    if (acc.hasOwnProperty(k)) {\n      throw new Error(\"A value for key '\" + k + \"' already exists in the object.\");\n    }\n\n    acc[k] = v;\n    return acc;\n  }, {});\n}","map":{"version":3,"sources":["fromEntries.tsx"],"names":["acc"],"mappings":";AACA,eAAe,SAAA,WAAA,CAAA,OAAA,EAEb;EACA,OAAO,OAAO,CAAP,MAAA,CAAe,UAAA,GAAA,EAAA,IAAA,EAAiB;IAAX,2BAAW,IAAX;IAAA,IAAA,CAAA;IAAA,IAAA,CAAA;;IAC1B,IAAIA,GAAG,CAAHA,cAAAA,CAAJ,CAAIA,CAAJ,EAA2B;MACzB,MAAM,IAAA,KAAA,uBAAN,CAAM,qCAAN;IACD;;IAEDA,GAAG,CAAHA,CAAG,CAAHA,GAAAA,CAAAA;IACA,OAAA,GAAA;EANK,CAAA,EAAP,EAAO,CAAP;AAQD","sourcesContent":["// Object.fromEntries is not available in older iOS versions\nexport default function fromEntries<K extends string, V>(\n  entries: (readonly [K, V])[]\n) {\n  return entries.reduce((acc, [k, v]) => {\n    if (acc.hasOwnProperty(k)) {\n      throw new Error(`A value for key '${k}' already exists in the object.`);\n    }\n\n    acc[k] = v;\n    return acc;\n  }, {} as Record<K, V>);\n}\n"]},"metadata":{},"sourceType":"module"}