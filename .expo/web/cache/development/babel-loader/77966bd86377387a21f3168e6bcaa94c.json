{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"color\", \"indeterminate\", \"style\", \"progress\", \"visible\", \"theme\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport setColor from 'color';\nimport { withTheme } from \"../core/theming\";\nvar INDETERMINATE_DURATION = 2000;\nvar INDETERMINATE_MAX_WIDTH = 0.6;\nvar isRTL = I18nManager.isRTL;\n\nvar ProgressBar = function ProgressBar(_ref) {\n  var color = _ref.color,\n      indeterminate = _ref.indeterminate,\n      style = _ref.style,\n      _ref$progress = _ref.progress,\n      progress = _ref$progress === void 0 ? 0 : _ref$progress,\n      _ref$visible = _ref.visible,\n      visible = _ref$visible === void 0 ? true : _ref$visible,\n      theme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useRef = React.useRef(new Animated.Value(0)),\n      timer = _React$useRef.current;\n\n  var _React$useRef2 = React.useRef(new Animated.Value(0)),\n      fade = _React$useRef2.current;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      width = _React$useState2[0],\n      setWidth = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      prevWidth = _React$useState4[0],\n      setPrevWidth = _React$useState4[1];\n\n  var indeterminateAnimation = React.useRef(null);\n  var scale = theme.animation.scale;\n  var startAnimation = React.useCallback(function () {\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      useNativeDriver: true,\n      isInteraction: false\n    }).start();\n\n    if (indeterminate) {\n      if (!indeterminateAnimation.current) {\n        indeterminateAnimation.current = Animated.timing(timer, {\n          duration: INDETERMINATE_DURATION,\n          toValue: 1,\n          useNativeDriver: Platform.OS !== 'web',\n          isInteraction: false\n        });\n      }\n\n      timer.setValue(0);\n      Animated.loop(indeterminateAnimation.current).start();\n    } else {\n      Animated.timing(timer, {\n        duration: 200 * scale,\n        toValue: progress ? progress : 0,\n        useNativeDriver: true,\n        isInteraction: false\n      }).start();\n    }\n  }, [scale, timer, progress, indeterminate, fade]);\n  var stopAnimation = React.useCallback(function () {\n    if (indeterminateAnimation.current) {\n      indeterminateAnimation.current.stop();\n    }\n\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 0,\n      useNativeDriver: true,\n      isInteraction: false\n    }).start();\n  }, [fade, scale]);\n  React.useEffect(function () {\n    if (visible) startAnimation();else stopAnimation();\n  }, [visible, startAnimation, stopAnimation]);\n  React.useEffect(function () {\n    if (visible && prevWidth === 0) {\n      startAnimation();\n    }\n  }, [prevWidth, startAnimation, visible]);\n\n  var onLayout = function onLayout(event) {\n    setPrevWidth(width);\n    setWidth(event.nativeEvent.layout.width);\n  };\n\n  var tintColor = color || theme.colors.primary;\n  var trackTintColor = setColor(tintColor).alpha(0.38).rgb().string();\n  return React.createElement(View, _extends({\n    onLayout: onLayout\n  }, rest, {\n    accessible: true,\n    accessibilityRole: \"progressbar\",\n    accessibilityState: {\n      busy: visible\n    },\n    accessibilityValue: indeterminate ? {} : {\n      min: 0,\n      max: 100,\n      now: progress * 100\n    }\n  }), React.createElement(Animated.View, {\n    style: [styles.container, {\n      backgroundColor: trackTintColor,\n      opacity: fade\n    }, style]\n  }, width ? React.createElement(Animated.View, {\n    style: [styles.progressBar, {\n      width: width,\n      backgroundColor: tintColor,\n      transform: [{\n        translateX: timer.interpolate(indeterminate ? {\n          inputRange: [0, 0.5, 1],\n          outputRange: [(isRTL ? 1 : -1) * 0.5 * width, (isRTL ? 1 : -1) * 0.5 * INDETERMINATE_MAX_WIDTH * width, (isRTL ? -1 : 1) * 0.7 * width]\n        } : {\n          inputRange: [0, 1],\n          outputRange: [(isRTL ? 1 : -1) * 0.5 * width, 0]\n        })\n      }, {\n        scaleX: timer.interpolate(indeterminate ? {\n          inputRange: [0, 0.5, 1],\n          outputRange: [0.0001, INDETERMINATE_MAX_WIDTH, 0.0001]\n        } : {\n          inputRange: [0, 1],\n          outputRange: [0.0001, 1]\n        })\n      }]\n    }]\n  }) : null));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    height: 4,\n    overflow: 'hidden'\n  },\n  progressBar: {\n    flex: 1\n  }\n});\nexport default withTheme(ProgressBar);","map":{"version":3,"sources":["ProgressBar.tsx"],"names":["INDETERMINATE_DURATION","INDETERMINATE_MAX_WIDTH","isRTL","ProgressBar","progress","visible","rest","current","timer","React","Animated","fade","indeterminateAnimation","scale","theme","startAnimation","duration","toValue","useNativeDriver","isInteraction","Platform","stopAnimation","prevWidth","onLayout","event","setPrevWidth","setWidth","tintColor","color","trackTintColor","setColor","busy","indeterminate","min","max","now","styles","backgroundColor","opacity","width","transform","translateX","inputRange","outputRange","scaleX","container","height","overflow","progressBar","flex","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleSheet,\n  View,\n  ViewStyle,\n  StyleProp,\n  LayoutChangeEvent,\n  I18nManager,\n} from 'react-native';\nimport setColor from 'color';\nimport { withTheme } from '../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Progress value (between 0 and 1).\n   */\n  progress?: number;\n  /**\n   * Color of the progress bar. The background color will be calculated based on this but you can change it by passing `backgroundColor` to `style` prop.\n   */\n  color?: string;\n  /**\n   * If the progress bar will show indeterminate progress.\n   */\n  indeterminate?: boolean;\n  /**\n   * Whether to show the ProgressBar (true, the default) or hide it (false).\n   */\n  visible?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst INDETERMINATE_DURATION = 2000;\nconst INDETERMINATE_MAX_WIDTH = 0.6;\nconst { isRTL } = I18nManager;\n\n/**\n * Progress bar is an indicator used to present progress of some activity in the app.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/progress-bar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ProgressBar, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ProgressBar progress={0.5} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ProgressBar = ({\n  color,\n  indeterminate,\n  style,\n  progress = 0,\n  visible = true,\n  theme,\n  ...rest\n}: Props) => {\n  const { current: timer } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { current: fade } = React.useRef<Animated.Value>(new Animated.Value(0));\n  const [width, setWidth] = React.useState<number>(0);\n  const [prevWidth, setPrevWidth] = React.useState<number>(0);\n\n  const indeterminateAnimation =\n    React.useRef<Animated.CompositeAnimation | null>(null);\n\n  const { scale } = theme.animation;\n\n  const startAnimation = React.useCallback(() => {\n    // Show progress bar\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n\n    // Animate progress bar\n    if (indeterminate) {\n      if (!indeterminateAnimation.current) {\n        indeterminateAnimation.current = Animated.timing(timer, {\n          duration: INDETERMINATE_DURATION,\n          toValue: 1,\n          // Animated.loop does not work if useNativeDriver is true on web\n          useNativeDriver: Platform.OS !== 'web',\n          isInteraction: false,\n        });\n      }\n\n      // Reset timer to the beginning\n      timer.setValue(0);\n\n      Animated.loop(indeterminateAnimation.current).start();\n    } else {\n      Animated.timing(timer, {\n        duration: 200 * scale,\n        toValue: progress ? progress : 0,\n        useNativeDriver: true,\n        isInteraction: false,\n      }).start();\n    }\n  }, [scale, timer, progress, indeterminate, fade]);\n\n  const stopAnimation = React.useCallback(() => {\n    // Stop indeterminate animation\n    if (indeterminateAnimation.current) {\n      indeterminateAnimation.current.stop();\n    }\n\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 0,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n  }, [fade, scale]);\n\n  React.useEffect(() => {\n    if (visible) startAnimation();\n    else stopAnimation();\n  }, [visible, startAnimation, stopAnimation]);\n\n  React.useEffect(() => {\n    // Start animation the very first time when previously the width was unclear\n    if (visible && prevWidth === 0) {\n      startAnimation();\n    }\n  }, [prevWidth, startAnimation, visible]);\n\n  const onLayout = (event: LayoutChangeEvent) => {\n    setPrevWidth(width);\n    setWidth(event.nativeEvent.layout.width);\n  };\n\n  const tintColor = color || theme.colors.primary;\n  const trackTintColor = setColor(tintColor).alpha(0.38).rgb().string();\n\n  return (\n    <View\n      onLayout={onLayout}\n      {...rest}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityState={{ busy: visible }}\n      accessibilityValue={\n        indeterminate ? {} : { min: 0, max: 100, now: progress * 100 }\n      }\n    >\n      <Animated.View\n        style={[\n          styles.container,\n          { backgroundColor: trackTintColor, opacity: fade },\n          style,\n        ]}\n      >\n        {width ? (\n          <Animated.View\n            style={[\n              styles.progressBar,\n              {\n                width,\n                backgroundColor: tintColor,\n                transform: [\n                  {\n                    translateX: timer.interpolate(\n                      indeterminate\n                        ? {\n                            inputRange: [0, 0.5, 1],\n                            outputRange: [\n                              (isRTL ? 1 : -1) * 0.5 * width,\n                              (isRTL ? 1 : -1) *\n                                0.5 *\n                                INDETERMINATE_MAX_WIDTH *\n                                width,\n                              (isRTL ? -1 : 1) * 0.7 * width,\n                            ],\n                          }\n                        : {\n                            inputRange: [0, 1],\n                            outputRange: [(isRTL ? 1 : -1) * 0.5 * width, 0],\n                          }\n                    ),\n                  },\n                  {\n                    // Workaround for workaround for https://github.com/facebook/react-native/issues/6278\n                    scaleX: timer.interpolate(\n                      indeterminate\n                        ? {\n                            inputRange: [0, 0.5, 1],\n                            outputRange: [\n                              0.0001,\n                              INDETERMINATE_MAX_WIDTH,\n                              0.0001,\n                            ],\n                          }\n                        : {\n                            inputRange: [0, 1],\n                            outputRange: [0.0001, 1],\n                          }\n                    ),\n                  },\n                ],\n              },\n            ]}\n          />\n        ) : null}\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 4,\n    overflow: 'hidden',\n  },\n\n  progressBar: {\n    flex: 1,\n  },\n});\n\nexport default withTheme(ProgressBar);\n"]},"metadata":{},"sourceType":"module"}