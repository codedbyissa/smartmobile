{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState } from 'react';\nimport { Container, Content, ContainerInput, Input, ContainerLab, InputLab, Save, SaveLab, ErrorMensage } from \"./styles/configApiUrl\";\nimport { useNavigation } from '@react-navigation/native';\nimport { ConfigContext } from \"../context/config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ConfigApiUrl() {\n  var navigation = useNavigation();\n\n  var _useContext = useContext(ConfigContext),\n      setApiUrl = _useContext.setApiUrl;\n\n  var _useState = useState({\n    status: false,\n    mensag: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      erroMensag = _useState2[0],\n      setErroMensag = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      alteraApiUrl = _useState4[0],\n      setAlteraApiUrl = _useState4[1];\n\n  var ToUpdateApiUrl = function ToUpdateApiUrl() {\n    if (alteraApiUrl == '') {\n      setErroMensag({\n        status: true,\n        mensag: 'Insira a URL de acesso a api'\n      });\n    } else {\n      setErroMensag({\n        status: false,\n        mensag: ''\n      });\n      fetch(\"http://\" + alteraApiUrl + \"/\", {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        if (json.nome_do_app && json.cor_principal && json.cor_segundaria) {\n          setErroMensag({\n            status: false,\n            mensag: ''\n          });\n          setApiUrl([alteraApiUrl, json]);\n        } else {\n          setErroMensag({\n            status: true,\n            mensag: 'URL de acesso invalida'\n          });\n        }\n      }).catch(function (error) {\n        setErroMensag({\n          status: true,\n          mensag: 'URL de acesso não encontrada'\n        });\n      });\n    }\n  };\n\n  return _jsxs(Container, {\n    children: [_jsxs(Content, {\n      contentContainerStyle: {\n        alignItems: 'center'\n      },\n      children: [_jsxs(ContainerInput, {\n        children: [_jsx(ContainerLab, {\n          children: _jsx(InputLab, {\n            children: \" URL API \"\n          })\n        }), _jsx(Input, {\n          onChangeText: function onChangeText(newText) {\n            return setAlteraApiUrl(newText);\n          },\n          placeholder: \"URL de acesso a api\"\n        })]\n      }), erroMensag.status == true ? _jsxs(ErrorMensage, {\n        children: [\" \", erroMensag.mensag, \" \"]\n      }) : null]\n    }), _jsx(Save, {\n      onPress: ToUpdateApiUrl,\n      children: _jsx(SaveLab, {\n        children: \" Salvar \"\n      })\n    })]\n  });\n}\n\n;\nexport default ConfigApiUrl;","map":{"version":3,"names":["React","useContext","useState","Container","Content","ContainerInput","Input","ContainerLab","InputLab","Save","SaveLab","ErrorMensage","useNavigation","ConfigContext","ConfigApiUrl","navigation","setApiUrl","status","mensag","erroMensag","setErroMensag","alteraApiUrl","setAlteraApiUrl","ToUpdateApiUrl","fetch","method","headers","then","response","json","nome_do_app","cor_principal","cor_segundaria","catch","error","alignItems","newText"],"sources":["C:/React N/SmartMobile/src/app/screens/config/configApiUrl.js"],"sourcesContent":["import React, { useContext, useState} from 'react';\r\nimport { Container, Content, ContainerInput, Input, ContainerLab, InputLab, Save, SaveLab, ErrorMensage} from \"./styles/configApiUrl\";\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { ConfigContext } from '../context/config';\r\n\r\n\r\nfunction ConfigApiUrl() {\r\n  \r\n  const navigation = useNavigation(); \r\n  const { setApiUrl } = useContext(ConfigContext)\r\n  const [erroMensag, setErroMensag] = useState({status: false, mensag: ''});\r\n \r\n  const [alteraApiUrl, setAlteraApiUrl] = useState('');\r\n\r\n    const ToUpdateApiUrl = () => {\r\n\r\n      if(alteraApiUrl == '') {\r\n    \r\n        setErroMensag({status: true, mensag: 'Insira a URL de acesso a api'})\r\n  \r\n      } else {\r\n\r\n        setErroMensag({status: false, mensag: ''})\r\n\r\n        fetch(`http://${alteraApiUrl}/`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((json) => { \r\n          if(json.nome_do_app && json.cor_principal && json.cor_segundaria) {\r\n\r\n            \r\n            setErroMensag({status: false, mensag: ''})\r\n            setApiUrl([alteraApiUrl, json])\r\n\r\n          } else {\r\n            setErroMensag({status: true, mensag: 'URL de acesso invalida'})\r\n          }\r\n        })\r\n        .catch(error => { setErroMensag({status: true, mensag: 'URL de acesso não encontrada'}) })\r\n\r\n      } \r\n    }\r\n\r\n    return (\r\n      <Container>\r\n\r\n      <Content contentContainerStyle={{ alignItems: 'center' }}>\r\n        <ContainerInput>\r\n          <ContainerLab>\r\n          <InputLab> URL API </InputLab>\r\n          </ContainerLab>\r\n          <Input\r\n          onChangeText={newText => setAlteraApiUrl(newText)}\r\n          placeholder='URL de acesso a api'/>\r\n          </ContainerInput> \r\n          { erroMensag.status == true? <ErrorMensage> {erroMensag.mensag} </ErrorMensage> : null }\r\n          </Content>\r\n\r\n          <Save onPress={ToUpdateApiUrl}>\r\n          <SaveLab> Salvar </SaveLab>\r\n          </Save>  \r\n        \r\n      </Container> ) \r\n  \r\n  };\r\n\r\n  export default ConfigApiUrl;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,cAA7B,EAA6CC,KAA7C,EAAoDC,YAApD,EAAkEC,QAAlE,EAA4EC,IAA5E,EAAkFC,OAAlF,EAA2FC,YAA3F;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,aAAT;;;;AAGA,SAASC,YAAT,GAAwB;EAEtB,IAAMC,UAAU,GAAGH,aAAa,EAAhC;;EACA,kBAAsBX,UAAU,CAACY,aAAD,CAAhC;EAAA,IAAQG,SAAR,eAAQA,SAAR;;EACA,gBAAoCd,QAAQ,CAAC;IAACe,MAAM,EAAE,KAAT;IAAgBC,MAAM,EAAE;EAAxB,CAAD,CAA5C;EAAA;EAAA,IAAOC,UAAP;EAAA,IAAmBC,aAAnB;;EAEA,iBAAwClB,QAAQ,CAAC,EAAD,CAAhD;EAAA;EAAA,IAAOmB,YAAP;EAAA,IAAqBC,eAArB;;EAEE,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;IAE3B,IAAGF,YAAY,IAAI,EAAnB,EAAuB;MAErBD,aAAa,CAAC;QAACH,MAAM,EAAE,IAAT;QAAeC,MAAM,EAAE;MAAvB,CAAD,CAAb;IAED,CAJD,MAIO;MAELE,aAAa,CAAC;QAACH,MAAM,EAAE,KAAT;QAAgBC,MAAM,EAAE;MAAxB,CAAD,CAAb;MAEAM,KAAK,aAAWH,YAAX,QAA4B;QACjCI,MAAM,EAAE,KADyB;QAEjCC,OAAO,EAAE;UACP,gBAAgB;QADT;MAFwB,CAA5B,CAAL,CAMCC,IAND,CAMM,UAACC,QAAD;QAAA,OAAcA,QAAQ,CAACC,IAAT,EAAd;MAAA,CANN,EAOCF,IAPD,CAOM,UAACE,IAAD,EAAU;QACd,IAAGA,IAAI,CAACC,WAAL,IAAoBD,IAAI,CAACE,aAAzB,IAA0CF,IAAI,CAACG,cAAlD,EAAkE;UAGhEZ,aAAa,CAAC;YAACH,MAAM,EAAE,KAAT;YAAgBC,MAAM,EAAE;UAAxB,CAAD,CAAb;UACAF,SAAS,CAAC,CAACK,YAAD,EAAeQ,IAAf,CAAD,CAAT;QAED,CAND,MAMO;UACLT,aAAa,CAAC;YAACH,MAAM,EAAE,IAAT;YAAeC,MAAM,EAAE;UAAvB,CAAD,CAAb;QACD;MACF,CAjBD,EAkBCe,KAlBD,CAkBO,UAAAC,KAAK,EAAI;QAAEd,aAAa,CAAC;UAACH,MAAM,EAAE,IAAT;UAAeC,MAAM,EAAE;QAAvB,CAAD,CAAb;MAAuE,CAlBzF;IAoBD;EACF,CA/BD;;EAiCA,OACE,MAAC,SAAD;IAAA,WAEA,MAAC,OAAD;MAAS,qBAAqB,EAAE;QAAEiB,UAAU,EAAE;MAAd,CAAhC;MAAA,WACE,MAAC,cAAD;QAAA,WACE,KAAC,YAAD;UAAA,UACA,KAAC,QAAD;YAAA;UAAA;QADA,EADF,EAIE,KAAC,KAAD;UACA,YAAY,EAAE,sBAAAC,OAAO;YAAA,OAAId,eAAe,CAACc,OAAD,CAAnB;UAAA,CADrB;UAEA,WAAW,EAAC;QAFZ,EAJF;MAAA,EADF,EASMjB,UAAU,CAACF,MAAX,IAAqB,IAArB,GAA2B,MAAC,YAAD;QAAA,gBAAgBE,UAAU,CAACD,MAA3B;MAAA,EAA3B,GAAgF,IATtF;IAAA,EAFA,EAcI,KAAC,IAAD;MAAM,OAAO,EAAEK,cAAf;MAAA,UACA,KAAC,OAAD;QAAA;MAAA;IADA,EAdJ;EAAA,EADF;AAqBD;;AAAA;AAED,eAAeT,YAAf"},"metadata":{},"sourceType":"module"}