{"ast":null,"code":"'use strict';\n\nvar DELAY = 'DELAY';\nvar ERROR = 'ERROR';\nvar LONG_PRESS_DETECTED = 'LONG_PRESS_DETECTED';\nvar NOT_RESPONDER = 'NOT_RESPONDER';\nvar RESPONDER_ACTIVE_LONG_PRESS_START = 'RESPONDER_ACTIVE_LONG_PRESS_START';\nvar RESPONDER_ACTIVE_PRESS_START = 'RESPONDER_ACTIVE_PRESS_START';\nvar RESPONDER_INACTIVE_PRESS_START = 'RESPONDER_INACTIVE_PRESS_START';\nvar RESPONDER_GRANT = 'RESPONDER_GRANT';\nvar RESPONDER_RELEASE = 'RESPONDER_RELEASE';\nvar RESPONDER_TERMINATED = 'RESPONDER_TERMINATED';\nvar Transitions = Object.freeze({\n  NOT_RESPONDER: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: ERROR,\n    RESPONDER_TERMINATED: ERROR,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_INACTIVE_PRESS_START: {\n    DELAY: RESPONDER_ACTIVE_PRESS_START,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_ACTIVE_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  ERROR: {\n    DELAY: NOT_RESPONDER,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: NOT_RESPONDER\n  }\n});\n\nvar isActiveSignal = function isActiveSignal(signal) {\n  return signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\n};\n\nvar isButtonRole = function isButtonRole(element) {\n  return element.getAttribute('role') === 'button';\n};\n\nvar isPressStartSignal = function isPressStartSignal(signal) {\n  return signal === RESPONDER_INACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\n};\n\nvar isTerminalSignal = function isTerminalSignal(signal) {\n  return signal === RESPONDER_TERMINATED || signal === RESPONDER_RELEASE;\n};\n\nvar isValidKeyPress = function isValidKeyPress(event) {\n  var key = event.key,\n      target = event.target;\n  var role = target.getAttribute('role');\n  var isSpacebar = key === ' ' || key === 'Spacebar';\n  return key === 'Enter' || isSpacebar && role === 'button';\n};\n\nvar DEFAULT_LONG_PRESS_DELAY_MS = 450;\nvar DEFAULT_PRESS_DELAY_MS = 50;\n\nvar PressResponder = function () {\n  function PressResponder(config) {\n    this._eventHandlers = null;\n    this._isPointerTouch = false;\n    this._longPressDelayTimeout = null;\n    this._longPressDispatched = false;\n    this._pressDelayTimeout = null;\n    this._pressOutDelayTimeout = null;\n    this._touchState = NOT_RESPONDER;\n    this.configure(config);\n  }\n\n  var _proto = PressResponder.prototype;\n\n  _proto.configure = function configure(config) {\n    this._config = config;\n  };\n\n  _proto.reset = function reset() {\n    this._cancelLongPressDelayTimeout();\n\n    this._cancelPressDelayTimeout();\n\n    this._cancelPressOutDelayTimeout();\n  };\n\n  _proto.getEventHandlers = function getEventHandlers() {\n    if (this._eventHandlers == null) {\n      this._eventHandlers = this._createEventHandlers();\n    }\n\n    return this._eventHandlers;\n  };\n\n  _proto._createEventHandlers = function _createEventHandlers() {\n    var _this = this;\n\n    var start = function start(event, shouldDelay) {\n      event.persist();\n\n      _this._cancelPressOutDelayTimeout();\n\n      _this._longPressDispatched = false;\n      _this._selectionTerminated = false;\n      _this._touchState = NOT_RESPONDER;\n      _this._isPointerTouch = event.nativeEvent.type === 'touchstart';\n\n      _this._receiveSignal(RESPONDER_GRANT, event);\n\n      var delayPressStart = normalizeDelay(_this._config.delayPressStart, 0, DEFAULT_PRESS_DELAY_MS);\n\n      if (shouldDelay !== false && delayPressStart > 0) {\n        _this._pressDelayTimeout = setTimeout(function () {\n          _this._receiveSignal(DELAY, event);\n        }, delayPressStart);\n      } else {\n        _this._receiveSignal(DELAY, event);\n      }\n\n      var delayLongPress = normalizeDelay(_this._config.delayLongPress, 10, DEFAULT_LONG_PRESS_DELAY_MS);\n      _this._longPressDelayTimeout = setTimeout(function () {\n        _this._handleLongPress(event);\n      }, delayLongPress + delayPressStart);\n    };\n\n    var end = function end(event) {\n      _this._receiveSignal(RESPONDER_RELEASE, event);\n    };\n\n    var keyupHandler = function keyupHandler(event) {\n      var onPress = _this._config.onPress;\n      var target = event.target;\n\n      if (_this._touchState !== NOT_RESPONDER && isValidKeyPress(event)) {\n        end(event);\n        document.removeEventListener('keyup', keyupHandler);\n        var role = target.getAttribute('role');\n        var elementType = target.tagName.toLowerCase();\n        var isNativeInteractiveElement = role === 'link' || elementType === 'a' || elementType === 'button' || elementType === 'input' || elementType === 'select' || elementType === 'textarea';\n\n        if (onPress != null && !isNativeInteractiveElement) {\n          onPress(event);\n        }\n      }\n    };\n\n    return {\n      onStartShouldSetResponder: function onStartShouldSetResponder(event) {\n        var disabled = _this._config.disabled;\n\n        if (disabled && isButtonRole(event.currentTarget)) {\n          event.stopPropagation();\n        }\n\n        if (disabled == null) {\n          return true;\n        }\n\n        return !disabled;\n      },\n      onKeyDown: function onKeyDown(event) {\n        var disabled = _this._config.disabled;\n        var key = event.key,\n            target = event.target;\n\n        if (!disabled && isValidKeyPress(event)) {\n          if (_this._touchState === NOT_RESPONDER) {\n            start(event, false);\n            document.addEventListener('keyup', keyupHandler);\n          }\n\n          var role = target.getAttribute('role');\n          var isSpacebarKey = key === ' ' || key === 'Spacebar';\n\n          var _isButtonRole = role === 'button' || role === 'menuitem';\n\n          if (isSpacebarKey && _isButtonRole) {\n            event.preventDefault();\n          }\n\n          event.stopPropagation();\n        }\n      },\n      onResponderGrant: function onResponderGrant(event) {\n        return start(event);\n      },\n      onResponderMove: function onResponderMove(event) {\n        if (_this._config.onPressMove != null) {\n          _this._config.onPressMove(event);\n        }\n\n        var touch = getTouchFromResponderEvent(event);\n\n        if (_this._touchActivatePosition != null) {\n          var deltaX = _this._touchActivatePosition.pageX - touch.pageX;\n          var deltaY = _this._touchActivatePosition.pageY - touch.pageY;\n\n          if (Math.hypot(deltaX, deltaY) > 10) {\n            _this._cancelLongPressDelayTimeout();\n          }\n        }\n      },\n      onResponderRelease: function onResponderRelease(event) {\n        return end(event);\n      },\n      onResponderTerminate: function onResponderTerminate(event) {\n        if (event.nativeEvent.type === 'selectionchange') {\n          _this._selectionTerminated = true;\n        }\n\n        _this._receiveSignal(RESPONDER_TERMINATED, event);\n      },\n      onResponderTerminationRequest: function onResponderTerminationRequest(event) {\n        var _this$_config = _this._config,\n            cancelable = _this$_config.cancelable,\n            disabled = _this$_config.disabled,\n            onLongPress = _this$_config.onLongPress;\n\n        if (!disabled && onLongPress != null && _this._isPointerTouch && event.nativeEvent.type === 'contextmenu') {\n          return false;\n        }\n\n        if (cancelable == null) {\n          return true;\n        }\n\n        return cancelable;\n      },\n      onClick: function onClick(event) {\n        var _this$_config2 = _this._config,\n            disabled = _this$_config2.disabled,\n            onPress = _this$_config2.onPress;\n\n        if (!disabled) {\n          event.stopPropagation();\n\n          if (_this._longPressDispatched || _this._selectionTerminated) {\n            event.preventDefault();\n          } else if (onPress != null && event.altKey === false) {\n            onPress(event);\n          }\n        } else {\n          if (isButtonRole(event.currentTarget)) {\n            event.stopPropagation();\n          }\n        }\n      },\n      onContextMenu: function onContextMenu(event) {\n        var _this$_config3 = _this._config,\n            disabled = _this$_config3.disabled,\n            onLongPress = _this$_config3.onLongPress;\n\n        if (!disabled) {\n          if (onLongPress != null && _this._isPointerTouch && !event.defaultPrevented) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        } else {\n          if (isButtonRole(event.currentTarget)) {\n            event.stopPropagation();\n          }\n        }\n      }\n    };\n  };\n\n  _proto._receiveSignal = function _receiveSignal(signal, event) {\n    var prevState = this._touchState;\n    var nextState = null;\n\n    if (Transitions[prevState] != null) {\n      nextState = Transitions[prevState][signal];\n    }\n\n    if (this._touchState === NOT_RESPONDER && signal === RESPONDER_RELEASE) {\n      return;\n    }\n\n    if (nextState == null || nextState === ERROR) {\n      console.error(\"PressResponder: Invalid signal \" + signal + \" for state \" + prevState + \" on responder\");\n    } else if (prevState !== nextState) {\n      this._performTransitionSideEffects(prevState, nextState, signal, event);\n\n      this._touchState = nextState;\n    }\n  };\n\n  _proto._performTransitionSideEffects = function _performTransitionSideEffects(prevState, nextState, signal, event) {\n    if (isTerminalSignal(signal)) {\n      this._isPointerTouch = false;\n      this._touchActivatePosition = null;\n\n      this._cancelLongPressDelayTimeout();\n    }\n\n    if (isPressStartSignal(prevState) && signal === LONG_PRESS_DETECTED) {\n      var onLongPress = this._config.onLongPress;\n\n      if (onLongPress != null && event.nativeEvent.key == null) {\n        onLongPress(event);\n        this._longPressDispatched = true;\n      }\n    }\n\n    var isPrevActive = isActiveSignal(prevState);\n    var isNextActive = isActiveSignal(nextState);\n\n    if (!isPrevActive && isNextActive) {\n      this._activate(event);\n    } else if (isPrevActive && !isNextActive) {\n      this._deactivate(event);\n    }\n\n    if (isPressStartSignal(prevState) && signal === RESPONDER_RELEASE) {\n      var _this$_config4 = this._config,\n          _onLongPress = _this$_config4.onLongPress,\n          onPress = _this$_config4.onPress;\n\n      if (onPress != null) {\n        var isPressCanceledByLongPress = _onLongPress != null && prevState === RESPONDER_ACTIVE_LONG_PRESS_START;\n\n        if (!isPressCanceledByLongPress) {\n          if (!isNextActive && !isPrevActive) {\n            this._activate(event);\n\n            this._deactivate(event);\n          }\n        }\n      }\n    }\n\n    this._cancelPressDelayTimeout();\n  };\n\n  _proto._activate = function _activate(event) {\n    var _this$_config5 = this._config,\n        onPressChange = _this$_config5.onPressChange,\n        onPressStart = _this$_config5.onPressStart;\n    var touch = getTouchFromResponderEvent(event);\n    this._touchActivatePosition = {\n      pageX: touch.pageX,\n      pageY: touch.pageY\n    };\n\n    if (onPressStart != null) {\n      onPressStart(event);\n    }\n\n    if (onPressChange != null) {\n      onPressChange(true);\n    }\n  };\n\n  _proto._deactivate = function _deactivate(event) {\n    var _this$_config6 = this._config,\n        onPressChange = _this$_config6.onPressChange,\n        onPressEnd = _this$_config6.onPressEnd;\n\n    function end() {\n      if (onPressEnd != null) {\n        onPressEnd(event);\n      }\n\n      if (onPressChange != null) {\n        onPressChange(false);\n      }\n    }\n\n    var delayPressEnd = normalizeDelay(this._config.delayPressEnd);\n\n    if (delayPressEnd > 0) {\n      this._pressOutDelayTimeout = setTimeout(function () {\n        end();\n      }, delayPressEnd);\n    } else {\n      end();\n    }\n  };\n\n  _proto._handleLongPress = function _handleLongPress(event) {\n    if (this._touchState === RESPONDER_ACTIVE_PRESS_START || this._touchState === RESPONDER_ACTIVE_LONG_PRESS_START) {\n      this._receiveSignal(LONG_PRESS_DETECTED, event);\n    }\n  };\n\n  _proto._cancelLongPressDelayTimeout = function _cancelLongPressDelayTimeout() {\n    if (this._longPressDelayTimeout != null) {\n      clearTimeout(this._longPressDelayTimeout);\n      this._longPressDelayTimeout = null;\n    }\n  };\n\n  _proto._cancelPressDelayTimeout = function _cancelPressDelayTimeout() {\n    if (this._pressDelayTimeout != null) {\n      clearTimeout(this._pressDelayTimeout);\n      this._pressDelayTimeout = null;\n    }\n  };\n\n  _proto._cancelPressOutDelayTimeout = function _cancelPressOutDelayTimeout() {\n    if (this._pressOutDelayTimeout != null) {\n      clearTimeout(this._pressOutDelayTimeout);\n      this._pressOutDelayTimeout = null;\n    }\n  };\n\n  return PressResponder;\n}();\n\nexport { PressResponder as default };\n\nfunction normalizeDelay(delay, min, fallback) {\n  if (min === void 0) {\n    min = 0;\n  }\n\n  if (fallback === void 0) {\n    fallback = 0;\n  }\n\n  return Math.max(min, delay !== null && delay !== void 0 ? delay : fallback);\n}\n\nfunction getTouchFromResponderEvent(event) {\n  var _event$nativeEvent = event.nativeEvent,\n      changedTouches = _event$nativeEvent.changedTouches,\n      touches = _event$nativeEvent.touches;\n\n  if (touches != null && touches.length > 0) {\n    return touches[0];\n  }\n\n  if (changedTouches != null && changedTouches.length > 0) {\n    return changedTouches[0];\n  }\n\n  return event.nativeEvent;\n}","map":{"version":3,"names":["DELAY","ERROR","LONG_PRESS_DETECTED","NOT_RESPONDER","RESPONDER_ACTIVE_LONG_PRESS_START","RESPONDER_ACTIVE_PRESS_START","RESPONDER_INACTIVE_PRESS_START","RESPONDER_GRANT","RESPONDER_RELEASE","RESPONDER_TERMINATED","Transitions","Object","freeze","isActiveSignal","signal","isButtonRole","element","getAttribute","isPressStartSignal","isTerminalSignal","isValidKeyPress","event","key","target","role","isSpacebar","DEFAULT_LONG_PRESS_DELAY_MS","DEFAULT_PRESS_DELAY_MS","PressResponder","config","_eventHandlers","_isPointerTouch","_longPressDelayTimeout","_longPressDispatched","_pressDelayTimeout","_pressOutDelayTimeout","_touchState","configure","_proto","prototype","_config","reset","_cancelLongPressDelayTimeout","_cancelPressDelayTimeout","_cancelPressOutDelayTimeout","getEventHandlers","_createEventHandlers","_this","start","shouldDelay","persist","_selectionTerminated","nativeEvent","type","_receiveSignal","delayPressStart","normalizeDelay","setTimeout","delayLongPress","_handleLongPress","end","keyupHandler","onPress","document","removeEventListener","elementType","tagName","toLowerCase","isNativeInteractiveElement","onStartShouldSetResponder","disabled","currentTarget","stopPropagation","onKeyDown","addEventListener","isSpacebarKey","_isButtonRole","preventDefault","onResponderGrant","onResponderMove","onPressMove","touch","getTouchFromResponderEvent","_touchActivatePosition","deltaX","pageX","deltaY","pageY","Math","hypot","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","_this$_config","cancelable","onLongPress","onClick","_this$_config2","altKey","onContextMenu","_this$_config3","defaultPrevented","prevState","nextState","console","error","_performTransitionSideEffects","isPrevActive","isNextActive","_activate","_deactivate","_this$_config4","_onLongPress","isPressCanceledByLongPress","_this$_config5","onPressChange","onPressStart","_this$_config6","onPressEnd","delayPressEnd","clearTimeout","default","delay","min","fallback","max","_event$nativeEvent","changedTouches","touches","length"],"sources":["C:/React N/SmartMobile/node_modules/react-native-web/dist/modules/usePressEvents/PressResponder.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar DELAY = 'DELAY';\nvar ERROR = 'ERROR';\nvar LONG_PRESS_DETECTED = 'LONG_PRESS_DETECTED';\nvar NOT_RESPONDER = 'NOT_RESPONDER';\nvar RESPONDER_ACTIVE_LONG_PRESS_START = 'RESPONDER_ACTIVE_LONG_PRESS_START';\nvar RESPONDER_ACTIVE_PRESS_START = 'RESPONDER_ACTIVE_PRESS_START';\nvar RESPONDER_INACTIVE_PRESS_START = 'RESPONDER_INACTIVE_PRESS_START';\nvar RESPONDER_GRANT = 'RESPONDER_GRANT';\nvar RESPONDER_RELEASE = 'RESPONDER_RELEASE';\nvar RESPONDER_TERMINATED = 'RESPONDER_TERMINATED';\nvar Transitions = Object.freeze({\n  NOT_RESPONDER: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: ERROR,\n    RESPONDER_TERMINATED: ERROR,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_INACTIVE_PRESS_START: {\n    DELAY: RESPONDER_ACTIVE_PRESS_START,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_ACTIVE_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  ERROR: {\n    DELAY: NOT_RESPONDER,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: NOT_RESPONDER\n  }\n});\n\nvar isActiveSignal = function isActiveSignal(signal) {\n  return signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\n};\n\nvar isButtonRole = function isButtonRole(element) {\n  return element.getAttribute('role') === 'button';\n};\n\nvar isPressStartSignal = function isPressStartSignal(signal) {\n  return signal === RESPONDER_INACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\n};\n\nvar isTerminalSignal = function isTerminalSignal(signal) {\n  return signal === RESPONDER_TERMINATED || signal === RESPONDER_RELEASE;\n};\n\nvar isValidKeyPress = function isValidKeyPress(event) {\n  var key = event.key,\n      target = event.target;\n  var role = target.getAttribute('role');\n  var isSpacebar = key === ' ' || key === 'Spacebar';\n  return key === 'Enter' || isSpacebar && role === 'button';\n};\n\nvar DEFAULT_LONG_PRESS_DELAY_MS = 450; // 500 - 50\n\nvar DEFAULT_PRESS_DELAY_MS = 50;\n/**\n * =========================== PressResponder Tutorial ===========================\n *\n * The `PressResponder` class helps you create press interactions by analyzing the\n * geometry of elements and observing when another responder (e.g. ScrollView)\n * has stolen the touch lock. It offers hooks for your component to provide\n * interaction feedback to the user:\n *\n * - When a press has activated (e.g. highlight an element)\n * - When a press has deactivated (e.g. un-highlight an element)\n * - When a press sould trigger an action, meaning it activated and deactivated\n *   while within the geometry of the element without the lock being stolen.\n *\n * A high quality interaction isn't as simple as you might think. There should\n * be a slight delay before activation. Moving your finger beyond an element's\n * bounds should trigger deactivation, but moving the same finger back within an\n * element's bounds should trigger reactivation.\n *\n * In order to use `PressResponder`, do the following:\n *\n *     const pressResponder = new PressResponder(config);\n *\n * 2. Choose the rendered component who should collect the press events. On that\n *    element, spread `pressability.getEventHandlers()` into its props.\n *\n *    return (\n *      <View {...this.state.pressResponder.getEventHandlers()} />\n *    );\n *\n * 3. Reset `PressResponder` when your component unmounts.\n *\n *    componentWillUnmount() {\n *      this.state.pressResponder.reset();\n *    }\n *\n * ==================== Implementation Details ====================\n *\n * `PressResponder` only assumes that there exists a `HitRect` node. The `PressRect`\n * is an abstract box that is extended beyond the `HitRect`.\n *\n * # Geometry\n *\n *  ┌────────────────────────┐\n *  │  ┌──────────────────┐  │ - Presses start anywhere within `HitRect`.\n *  │  │  ┌────────────┐  │  │\n *  │  │  │ VisualRect │  │  │\n *  │  │  └────────────┘  │  │ - When pressed down for sufficient amount of time\n *  │  │    HitRect       │  │   before letting up, `VisualRect` activates.\n *  │  └──────────────────┘  │\n *  │       Out Region   o   │\n *  └────────────────────│───┘\n *                       └────── When the press is released outside the `HitRect`,\n *                               the responder is NOT eligible for a \"press\".\n *\n * # State Machine\n *\n * ┌───────────────┐ ◀──── RESPONDER_RELEASE\n * │ NOT_RESPONDER │\n * └───┬───────────┘ ◀──── RESPONDER_TERMINATED\n *     │\n *     │ RESPONDER_GRANT (HitRect)\n *     │\n *     ▼\n * ┌─────────────────────┐          ┌───────────────────┐              ┌───────────────────┐\n * │ RESPONDER_INACTIVE_ │  DELAY   │ RESPONDER_ACTIVE_ │  T + DELAY   │ RESPONDER_ACTIVE_ │\n * │ PRESS_START         ├────────▶ │ PRESS_START       ├────────────▶ │ LONG_PRESS_START  │\n * └─────────────────────┘          └───────────────────┘              └───────────────────┘\n *\n * T + DELAY => LONG_PRESS_DELAY + DELAY\n *\n * Not drawn are the side effects of each transition. The most important side\n * effect is the invocation of `onLongPress`. Only when the browser produces a\n * `click` event is `onPress` invoked.\n */\n\nvar PressResponder = /*#__PURE__*/function () {\n  function PressResponder(config) {\n    this._eventHandlers = null;\n    this._isPointerTouch = false;\n    this._longPressDelayTimeout = null;\n    this._longPressDispatched = false;\n    this._pressDelayTimeout = null;\n    this._pressOutDelayTimeout = null;\n    this._touchState = NOT_RESPONDER;\n    this.configure(config);\n  }\n\n  var _proto = PressResponder.prototype;\n\n  _proto.configure = function configure(config) {\n    this._config = config;\n  }\n  /**\n   * Resets any pending timers. This should be called on unmount.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    this._cancelLongPressDelayTimeout();\n\n    this._cancelPressDelayTimeout();\n\n    this._cancelPressOutDelayTimeout();\n  }\n  /**\n   * Returns a set of props to spread into the interactive element.\n   */\n  ;\n\n  _proto.getEventHandlers = function getEventHandlers() {\n    if (this._eventHandlers == null) {\n      this._eventHandlers = this._createEventHandlers();\n    }\n\n    return this._eventHandlers;\n  };\n\n  _proto._createEventHandlers = function _createEventHandlers() {\n    var _this = this;\n\n    var start = function start(event, shouldDelay) {\n      event.persist();\n\n      _this._cancelPressOutDelayTimeout();\n\n      _this._longPressDispatched = false;\n      _this._selectionTerminated = false;\n      _this._touchState = NOT_RESPONDER;\n      _this._isPointerTouch = event.nativeEvent.type === 'touchstart';\n\n      _this._receiveSignal(RESPONDER_GRANT, event);\n\n      var delayPressStart = normalizeDelay(_this._config.delayPressStart, 0, DEFAULT_PRESS_DELAY_MS);\n\n      if (shouldDelay !== false && delayPressStart > 0) {\n        _this._pressDelayTimeout = setTimeout(function () {\n          _this._receiveSignal(DELAY, event);\n        }, delayPressStart);\n      } else {\n        _this._receiveSignal(DELAY, event);\n      }\n\n      var delayLongPress = normalizeDelay(_this._config.delayLongPress, 10, DEFAULT_LONG_PRESS_DELAY_MS);\n      _this._longPressDelayTimeout = setTimeout(function () {\n        _this._handleLongPress(event);\n      }, delayLongPress + delayPressStart);\n    };\n\n    var end = function end(event) {\n      _this._receiveSignal(RESPONDER_RELEASE, event);\n    };\n\n    var keyupHandler = function keyupHandler(event) {\n      var onPress = _this._config.onPress;\n      var target = event.target;\n\n      if (_this._touchState !== NOT_RESPONDER && isValidKeyPress(event)) {\n        end(event);\n        document.removeEventListener('keyup', keyupHandler);\n        var role = target.getAttribute('role');\n        var elementType = target.tagName.toLowerCase();\n        var isNativeInteractiveElement = role === 'link' || elementType === 'a' || elementType === 'button' || elementType === 'input' || elementType === 'select' || elementType === 'textarea';\n\n        if (onPress != null && !isNativeInteractiveElement) {\n          onPress(event);\n        }\n      }\n    };\n\n    return {\n      onStartShouldSetResponder: function onStartShouldSetResponder(event) {\n        var disabled = _this._config.disabled;\n\n        if (disabled && isButtonRole(event.currentTarget)) {\n          event.stopPropagation();\n        }\n\n        if (disabled == null) {\n          return true;\n        }\n\n        return !disabled;\n      },\n      onKeyDown: function onKeyDown(event) {\n        var disabled = _this._config.disabled;\n        var key = event.key,\n            target = event.target;\n\n        if (!disabled && isValidKeyPress(event)) {\n          if (_this._touchState === NOT_RESPONDER) {\n            start(event, false); // Listen to 'keyup' on document to account for situations where\n            // focus is moved to another element during 'keydown'.\n\n            document.addEventListener('keyup', keyupHandler);\n          }\n\n          var role = target.getAttribute('role');\n          var isSpacebarKey = key === ' ' || key === 'Spacebar';\n\n          var _isButtonRole = role === 'button' || role === 'menuitem';\n\n          if (isSpacebarKey && _isButtonRole) {\n            // Prevent spacebar scrolling the window\n            event.preventDefault();\n          }\n\n          event.stopPropagation();\n        }\n      },\n      onResponderGrant: function onResponderGrant(event) {\n        return start(event);\n      },\n      onResponderMove: function onResponderMove(event) {\n        if (_this._config.onPressMove != null) {\n          _this._config.onPressMove(event);\n        }\n\n        var touch = getTouchFromResponderEvent(event);\n\n        if (_this._touchActivatePosition != null) {\n          var deltaX = _this._touchActivatePosition.pageX - touch.pageX;\n          var deltaY = _this._touchActivatePosition.pageY - touch.pageY;\n\n          if (Math.hypot(deltaX, deltaY) > 10) {\n            _this._cancelLongPressDelayTimeout();\n          }\n        }\n      },\n      onResponderRelease: function onResponderRelease(event) {\n        return end(event);\n      },\n      onResponderTerminate: function onResponderTerminate(event) {\n        if (event.nativeEvent.type === 'selectionchange') {\n          _this._selectionTerminated = true;\n        }\n\n        _this._receiveSignal(RESPONDER_TERMINATED, event);\n      },\n      onResponderTerminationRequest: function onResponderTerminationRequest(event) {\n        var _this$_config = _this._config,\n            cancelable = _this$_config.cancelable,\n            disabled = _this$_config.disabled,\n            onLongPress = _this$_config.onLongPress; // If `onLongPress` is provided, don't terminate on `contextmenu` as default\n        // behavior will be prevented for non-mouse pointers.\n\n        if (!disabled && onLongPress != null && _this._isPointerTouch && event.nativeEvent.type === 'contextmenu') {\n          return false;\n        }\n\n        if (cancelable == null) {\n          return true;\n        }\n\n        return cancelable;\n      },\n      // NOTE: this diverges from react-native in 3 significant ways:\n      // * The `onPress` callback is not connected to the responder system (the native\n      //  `click` event must be used but is dispatched in many scenarios where no pointers\n      //   are on the screen.) Therefore, it's possible for `onPress` to be called without\n      //   `onPress{Start,End}` being called first.\n      // * The `onPress` callback is only be called on the first ancestor of the native\n      //   `click` target that is using the PressResponder.\n      // * The event's `nativeEvent` is a `MouseEvent` not a `TouchEvent`.\n      onClick: function onClick(event) {\n        var _this$_config2 = _this._config,\n            disabled = _this$_config2.disabled,\n            onPress = _this$_config2.onPress;\n\n        if (!disabled) {\n          // If long press dispatched, cancel default click behavior.\n          // If the responder terminated because text was selected during the gesture,\n          // cancel the default click behavior.\n          event.stopPropagation();\n\n          if (_this._longPressDispatched || _this._selectionTerminated) {\n            event.preventDefault();\n          } else if (onPress != null && event.altKey === false) {\n            onPress(event);\n          }\n        } else {\n          if (isButtonRole(event.currentTarget)) {\n            event.stopPropagation();\n          }\n        }\n      },\n      // If `onLongPress` is provided and a touch pointer is being used, prevent the\n      // default context menu from opening.\n      onContextMenu: function onContextMenu(event) {\n        var _this$_config3 = _this._config,\n            disabled = _this$_config3.disabled,\n            onLongPress = _this$_config3.onLongPress;\n\n        if (!disabled) {\n          if (onLongPress != null && _this._isPointerTouch && !event.defaultPrevented) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        } else {\n          if (isButtonRole(event.currentTarget)) {\n            event.stopPropagation();\n          }\n        }\n      }\n    };\n  }\n  /**\n   * Receives a state machine signal, performs side effects of the transition\n   * and stores the new state. Validates the transition as well.\n   */\n  ;\n\n  _proto._receiveSignal = function _receiveSignal(signal, event) {\n    var prevState = this._touchState;\n    var nextState = null;\n\n    if (Transitions[prevState] != null) {\n      nextState = Transitions[prevState][signal];\n    }\n\n    if (this._touchState === NOT_RESPONDER && signal === RESPONDER_RELEASE) {\n      return;\n    }\n\n    if (nextState == null || nextState === ERROR) {\n      console.error(\"PressResponder: Invalid signal \" + signal + \" for state \" + prevState + \" on responder\");\n    } else if (prevState !== nextState) {\n      this._performTransitionSideEffects(prevState, nextState, signal, event);\n\n      this._touchState = nextState;\n    }\n  }\n  /**\n   * Performs a transition between touchable states and identify any activations\n   * or deactivations (and callback invocations).\n   */\n  ;\n\n  _proto._performTransitionSideEffects = function _performTransitionSideEffects(prevState, nextState, signal, event) {\n    if (isTerminalSignal(signal)) {\n      this._isPointerTouch = false;\n      this._touchActivatePosition = null;\n\n      this._cancelLongPressDelayTimeout();\n    }\n\n    if (isPressStartSignal(prevState) && signal === LONG_PRESS_DETECTED) {\n      var onLongPress = this._config.onLongPress; // Long press is not supported for keyboards because 'click' can be dispatched\n      // immediately (and multiple times) after 'keydown'.\n\n      if (onLongPress != null && event.nativeEvent.key == null) {\n        onLongPress(event);\n        this._longPressDispatched = true;\n      }\n    }\n\n    var isPrevActive = isActiveSignal(prevState);\n    var isNextActive = isActiveSignal(nextState);\n\n    if (!isPrevActive && isNextActive) {\n      this._activate(event);\n    } else if (isPrevActive && !isNextActive) {\n      this._deactivate(event);\n    }\n\n    if (isPressStartSignal(prevState) && signal === RESPONDER_RELEASE) {\n      var _this$_config4 = this._config,\n          _onLongPress = _this$_config4.onLongPress,\n          onPress = _this$_config4.onPress;\n\n      if (onPress != null) {\n        var isPressCanceledByLongPress = _onLongPress != null && prevState === RESPONDER_ACTIVE_LONG_PRESS_START;\n\n        if (!isPressCanceledByLongPress) {\n          // If we never activated (due to delays), activate and deactivate now.\n          if (!isNextActive && !isPrevActive) {\n            this._activate(event);\n\n            this._deactivate(event);\n          }\n        }\n      }\n    }\n\n    this._cancelPressDelayTimeout();\n  };\n\n  _proto._activate = function _activate(event) {\n    var _this$_config5 = this._config,\n        onPressChange = _this$_config5.onPressChange,\n        onPressStart = _this$_config5.onPressStart;\n    var touch = getTouchFromResponderEvent(event);\n    this._touchActivatePosition = {\n      pageX: touch.pageX,\n      pageY: touch.pageY\n    };\n\n    if (onPressStart != null) {\n      onPressStart(event);\n    }\n\n    if (onPressChange != null) {\n      onPressChange(true);\n    }\n  };\n\n  _proto._deactivate = function _deactivate(event) {\n    var _this$_config6 = this._config,\n        onPressChange = _this$_config6.onPressChange,\n        onPressEnd = _this$_config6.onPressEnd;\n\n    function end() {\n      if (onPressEnd != null) {\n        onPressEnd(event);\n      }\n\n      if (onPressChange != null) {\n        onPressChange(false);\n      }\n    }\n\n    var delayPressEnd = normalizeDelay(this._config.delayPressEnd);\n\n    if (delayPressEnd > 0) {\n      this._pressOutDelayTimeout = setTimeout(function () {\n        end();\n      }, delayPressEnd);\n    } else {\n      end();\n    }\n  };\n\n  _proto._handleLongPress = function _handleLongPress(event) {\n    if (this._touchState === RESPONDER_ACTIVE_PRESS_START || this._touchState === RESPONDER_ACTIVE_LONG_PRESS_START) {\n      this._receiveSignal(LONG_PRESS_DETECTED, event);\n    }\n  };\n\n  _proto._cancelLongPressDelayTimeout = function _cancelLongPressDelayTimeout() {\n    if (this._longPressDelayTimeout != null) {\n      clearTimeout(this._longPressDelayTimeout);\n      this._longPressDelayTimeout = null;\n    }\n  };\n\n  _proto._cancelPressDelayTimeout = function _cancelPressDelayTimeout() {\n    if (this._pressDelayTimeout != null) {\n      clearTimeout(this._pressDelayTimeout);\n      this._pressDelayTimeout = null;\n    }\n  };\n\n  _proto._cancelPressOutDelayTimeout = function _cancelPressOutDelayTimeout() {\n    if (this._pressOutDelayTimeout != null) {\n      clearTimeout(this._pressOutDelayTimeout);\n      this._pressOutDelayTimeout = null;\n    }\n  };\n\n  return PressResponder;\n}();\n\nexport { PressResponder as default };\n\nfunction normalizeDelay(delay, min, fallback) {\n  if (min === void 0) {\n    min = 0;\n  }\n\n  if (fallback === void 0) {\n    fallback = 0;\n  }\n\n  return Math.max(min, delay !== null && delay !== void 0 ? delay : fallback);\n}\n\nfunction getTouchFromResponderEvent(event) {\n  var _event$nativeEvent = event.nativeEvent,\n      changedTouches = _event$nativeEvent.changedTouches,\n      touches = _event$nativeEvent.touches;\n\n  if (touches != null && touches.length > 0) {\n    return touches[0];\n  }\n\n  if (changedTouches != null && changedTouches.length > 0) {\n    return changedTouches[0];\n  }\n\n  return event.nativeEvent;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}